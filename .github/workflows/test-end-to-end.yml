name: Run Frisbee Scenarios within GitHub Actions

on:
  workflow_dispatch:
    inputs:
      scenario:
        required: true
        description: The scenario to run.
        default: ./examples/1.hello-world.yaml
      charts:
        required: false
        description: Space separated list of dependent Helm Charts required for the Scenario.
        default: ./charts/system

jobs:
  deploy-frisbee:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Go Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install MicroK8s
        uses: balchua/microk8s-actions@v0.2.2
        with:
          channel: 'latest/stable'
          addons: '["dns", "ingress", "helm3"]'


      - name: skata
        run: |
          ls -lah

      - name: Install Frisbee
        run: |
          alias kubectl='microk8s kubectl'
          alias helm='microk8s helm3'
          
          # Build the Frisbee cli
          go build ./cmd/kubectl-frisbee/main.go
          
          # Install Frisbee
          ./main install production -v=false  

  run-tests:
    runs-on: ubuntu-latest
    needs:   deploy-frisbee
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: skata
        run: |
          ls -lah

      - name: Run Frisbee Scenario
        run: |
          # Submit the job
          ./main submit test demo- ${{ github.event.inputs.scenario }} ${{ github.event.inputs.charts}}
