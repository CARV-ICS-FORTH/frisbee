name: Run Frisbee Scenarios

on:
  workflow_dispatch:
    inputs:
      scenario:
        required: true
        description: The scenario to run.
        default: ./examples/1.hello-world.yml
      charts:
        required: false
        description: Space separated list of dependent Helm Charts required for the Scenario.
        default: ./charts/system

jobs:
  deploy-frisbee:
    runs-on: ubuntu-latest
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install MicroK8s
        uses: balchua/microk8s-actions@v0.2.2
        with:
          channel: 'latest/stable'
          addons: '["dns", "ingress", "helm3"]'

      - name: Cache Frisbee Installation
        uses: actions/cache@v3
        env:
           cache-name: cache-installation
        with:
           # microk8s on snap is in '/var/snap/microk8s/current/' on Linux/macOS
            path: /var/snap/microk8s/
            key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/lite.lock') }}
            restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-


      - name: Install Frisbee
        run: |
          alias kubectl='microk8s kubectl'
          alias helm='microk8s helm3'
          
          # Fix Microk8s permissions
          usermod -a -G microk8s runner
          chown -f -R runner ~/.kube
          newgrp microk8s
          
          # Microk8s info
          microk8s status
          
          # Install kubectl-frisbee
          ./install.sh 
          
          # Install Frisbee
          ./kubectl-frisbee install production -v=false  


      - name: Run Frisbee Scenario
        run: |
          echo $PATH
          
          ls -lah 
          ls /var/snap/microk8s/current/
          
          # Submit the job
          ./kubectl-frisbee submit test demo- ${{ github.event.inputs.scenario }} ${{ github.event.inputs.charts}}
