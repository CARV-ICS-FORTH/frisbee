---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: chaosactions.frisbee.io
spec:
  group: frisbee.io
  names:
    kind: ChaosAction
    listKind: ChaosActionList
    plural: chaosactions
    singular: chaosaction
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines the behavior of the object
              properties:
                awsChaos:
                  description: AwsChaosSpec is the content of the specification for
                    an AwsChaos
                  properties:
                    action:
                      description: 'Action defines the specific aws chaos action. Supported
                      action: ec2-stop / ec2-restart / detach-volume Default action:
                      ec2-stop'
                      enum:
                        - ec2-stop
                        - ec2-restart
                        - detach-volume
                      type: string
                    awsRegion:
                      description: AwsRegion defines the region of aws.
                      type: string
                    deviceName:
                      description: DeviceName indicates the name of the device. Needed
                        in detach-volume.
                      type: string
                    duration:
                      description: Duration represents the duration of the chaos action.
                      type: string
                    ec2Instance:
                      description: Ec2Instance indicates the ID of the ec2 instance.
                      type: string
                    endpoint:
                      description: Endpoint indicates the endpoint of the aws server.
                        Just used it in test now.
                      type: string
                    secretName:
                      description: SecretName defines the name of kubernetes secret.
                      type: string
                    volumeID:
                      description: EbsVolume indicates the ID of the EBS volume. Needed
                        in detach-volume.
                      type: string
                  required:
                    - action
                    - awsRegion
                    - ec2Instance
                  type: object
                children:
                  description: Children describes the children steps of serial or parallel
                    node. Only used when Type is TypeSerial or TypeParallel.
                  items:
                    type: string
                  type: array
                conditionalBranches:
                  description: ConditionalBranches describes the conditional branches
                    of custom tasks. Only used when Type is TypeTask.
                  items:
                    properties:
                      expression:
                        description: Expression is the expression for this conditional
                          branch, expected type of result is boolean. If expression
                          is empty, this branch will always be selected/the template
                          will be spawned.
                        type: string
                      target:
                        description: Target is the name of other template, if expression
                          is evaluated as true, this template will be spawned.
                        type: string
                    required:
                      - target
                    type: object
                  type: array
                deadline:
                  type: string
                dnsChaos:
                  description: DNSChaosSpec defines the desired state of DNSChaos
                  properties:
                    action:
                      description: 'Action defines the specific DNS chaos action. Supported
                      action: error, random Default action: error'
                      enum:
                        - error
                        - random
                      type: string
                    containerNames:
                      description: ContainerNames indicates list of the name of affected
                        container. If not set, all containers will be injected
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration represents the duration of the chaos action
                      type: string
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    patterns:
                      description: "Choose which domain names to take effect, support
                      the placeholder ? and wildcard *, or the Specified domain name.
                      Note:      1. The wildcard * must be at the end of the string.
                      For example, chaos-*.org is invalid.      2. if the patterns
                      is empty, will take effect on all the domain names. For example:
                      \t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],
                      \t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\""
                      items:
                        type: string
                      type: array
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - action
                    - mode
                    - selector
                  type: object
                gcpChaos:
                  description: GcpChaosSpec is the content of the specification for
                    a GcpChaos
                  properties:
                    action:
                      description: 'Action defines the specific gcp chaos action. Supported
                      action: node-stop / node-reset / disk-loss Default action: node-stop'
                      enum:
                        - node-stop
                        - node-reset
                        - disk-loss
                      type: string
                    deviceNames:
                      description: The device name of disks to detach. Needed in disk-loss.
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration represents the duration of the chaos action.
                      type: string
                    instance:
                      description: Instance defines the name of the instance
                      type: string
                    project:
                      description: Project defines the name of gcp project.
                      type: string
                    secretName:
                      description: SecretName defines the name of kubernetes secret.
                        It is used for GCP credentials.
                      type: string
                    zone:
                      description: Zone defines the zone of gcp project.
                      type: string
                  required:
                    - action
                    - instance
                    - project
                    - zone
                  type: object
                httpChaos:
                  properties:
                    abort:
                      description: Abort is a rule to abort a http session.
                      type: boolean
                    code:
                      description: Code is a rule to select target by http status code
                        in response.
                      format: int32
                      type: integer
                    delay:
                      description: Delay represents the delay of the target request/response.
                        A duration string is a possibly unsigned sequence of decimal
                        numbers, each with optional fraction and a unit suffix, such
                        as "300ms", "2h45m". Valid time units are "ns", "us" (or "µs"),
                        "ms", "s", "m", "h".
                      type: string
                    duration:
                      description: Duration represents the duration of the chaos action.
                      type: string
                    method:
                      description: Method is a rule to select target by http method
                        in request.
                      type: string
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    patch:
                      description: Patch is a rule to patch some contents in target.
                      properties:
                        body:
                          description: Body is a rule to patch message body of target.
                          properties:
                            type:
                              description: Type represents the patch type, only support
                                `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                                currently.
                              type: string
                            value:
                              description: Value is the patch contents.
                              type: string
                          required:
                            - type
                            - value
                          type: object
                        headers:
                          description: 'Headers is a rule to append http headers of
                          target. For example: `[["Set-Cookie", "<one cookie>"], ["Set-Cookie",
                          "<another cookie>"]]`.'
                          items:
                            items:
                              type: string
                            type: array
                          type: array
                        queries:
                          description: 'Queries is a rule to append uri queries of target(Request
                          only). For example: `[["foo", "bar"], ["foo", "unknown"]]`.'
                          items:
                            items:
                              type: string
                            type: array
                          type: array
                      type: object
                    path:
                      description: Path is a rule to select target by uri path in http
                        request.
                      type: string
                    port:
                      description: Port represents the target port to be proxy of.
                      format: int32
                      type: integer
                    replace:
                      description: Replace is a rule to replace some contents in target.
                      properties:
                        body:
                          description: Body is a rule to replace http message body in
                            target.
                          format: byte
                          type: string
                        code:
                          description: Code is a rule to replace http status code in
                            response.
                          format: int32
                          type: integer
                        headers:
                          additionalProperties:
                            type: string
                          description: Headers is a rule to replace http headers of
                            target. The key-value pairs represent header name and header
                            value pairs.
                          type: object
                        method:
                          description: Method is a rule to replace http method in request.
                          type: string
                        path:
                          description: Path is rule to to replace uri path in http request.
                          type: string
                        queries:
                          additionalProperties:
                            type: string
                          description: 'Queries is a rule to replace uri queries in
                          http request. For example, with value `{ "foo": "unknown"
                          }`, the `/?foo=bar` will be altered to `/?foo=unknown`,'
                          type: object
                      type: object
                    request_headers:
                      additionalProperties:
                        type: string
                      description: RequestHeaders is a rule to select target by http
                        headers in request. The key-value pairs represent header name
                        and header value pairs.
                      type: object
                    response_headers:
                      additionalProperties:
                        type: string
                      description: ResponseHeaders is a rule to select target by http
                        headers in response. The key-value pairs represent header name
                        and header value pairs.
                      type: object
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    target:
                      description: Target is the object to be selected and injected.
                      enum:
                        - Request
                        - Response
                      type: string
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - mode
                    - selector
                    - target
                  type: object
                ioChaos:
                  description: IOChaosSpec defines the desired state of IOChaos
                  properties:
                    action:
                      description: 'Action defines the specific pod chaos action. Supported
                      action: latency / fault / attrOverride / mistake'
                      enum:
                        - latency
                        - fault
                        - attrOverride
                        - mistake
                      type: string
                    attr:
                      description: Attr defines the overrided attribution
                      properties:
                        atime:
                          description: Timespec represents a time
                          properties:
                            nsec:
                              format: int64
                              type: integer
                            sec:
                              format: int64
                              type: integer
                          required:
                            - nsec
                            - sec
                          type: object
                        blocks:
                          format: int64
                          type: integer
                        ctime:
                          description: Timespec represents a time
                          properties:
                            nsec:
                              format: int64
                              type: integer
                            sec:
                              format: int64
                              type: integer
                          required:
                            - nsec
                            - sec
                          type: object
                        gid:
                          format: int32
                          type: integer
                        ino:
                          format: int64
                          type: integer
                        kind:
                          description: FileType represents type of a file
                          type: string
                        mtime:
                          description: Timespec represents a time
                          properties:
                            nsec:
                              format: int64
                              type: integer
                            sec:
                              format: int64
                              type: integer
                          required:
                            - nsec
                            - sec
                          type: object
                        nlink:
                          format: int32
                          type: integer
                        perm:
                          type: integer
                        rdev:
                          format: int32
                          type: integer
                        size:
                          format: int64
                          type: integer
                        uid:
                          format: int32
                          type: integer
                      type: object
                    containerNames:
                      description: ContainerNames indicates list of the name of affected
                        container. If not set, all containers will be injected
                      items:
                        type: string
                      type: array
                    delay:
                      description: Delay defines the value of I/O chaos action delay.
                        A delay string is a possibly signed sequence of decimal numbers,
                        each with optional fraction and a unit suffix, such as "300ms".
                        Valid time units are "ns", "us" (or "µs"), "ms", "s", "m", "h".
                      type: string
                    duration:
                      description: Duration represents the duration of the chaos action.
                        It is required when the action is `PodFailureAction`. A duration
                        string is a possibly signed sequence of decimal numbers, each
                        with optional fraction and a unit suffix, such as "300ms", "-1.5h"
                        or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms",
                        "s", "m", "h".
                      type: string
                    errno:
                      description: 'Errno defines the error code that returned by I/O
                      action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                      format: int32
                      type: integer
                    methods:
                      description: 'Methods defines the I/O methods for injecting I/O
                      chaos action. default: all I/O methods.'
                      items:
                        type: string
                      type: array
                    mistake:
                      description: Mistake defines what types of incorrectness are injected
                        to IO operations
                      properties:
                        filling:
                          description: Filling determines what is filled in the miskate
                            data.
                          enum:
                            - zero
                            - random
                          type: string
                        maxLength:
                          description: Max length of each wrong data segment in bytes
                          format: int64
                          minimum: 1
                          type: integer
                        maxOccurrences:
                          description: There will be [1, MaxOccurrences] segments of
                            wrong data.
                          format: int64
                          minimum: 1
                          type: integer
                      type: object
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    path:
                      description: Path defines the path of files for injecting I/O
                        chaos action.
                      type: string
                    percent:
                      description: 'Percent defines the percentage of injection errors
                      and provides a number from 0-100. default: 100.'
                      type: integer
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                    volumePath:
                      description: VolumePath represents the mount path of injected
                        volume
                      type: string
                  required:
                    - action
                    - mode
                    - selector
                    - volumePath
                  type: object
                jvmChaos:
                  description: JVMChaosSpec defines the desired state of JVMChaos
                  properties:
                    action:
                      description: 'Action defines the specific jvm chaos action. Supported
                      action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                      enum:
                        - delay
                        - return
                        - script
                        - cfl
                        - oom
                        - ccf
                        - tce
                        - cpf
                        - tde
                        - tpf
                      type: string
                    containerNames:
                      description: ContainerNames indicates list of the name of affected
                        container. If not set, all containers will be injected
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration represents the duration of the chaos action
                      type: string
                    flags:
                      additionalProperties:
                        type: string
                      description: Flags represents the flags of action
                      type: object
                    matchers:
                      additionalProperties:
                        type: string
                      description: Matchers represents the matching rules for the target
                      type: object
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    target:
                      description: 'Target defines the specific jvm chaos target. Supported
                      target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                      enum:
                        - servlet
                        - psql
                        - jvm
                        - jedis
                        - http
                        - dubbo
                        - rocketmq
                        - tars
                        - mysql
                        - druid
                        - redisson
                        - rabbitmq
                        - mongodb
                      type: string
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - action
                    - mode
                    - selector
                    - target
                  type: object
                kernelChaos:
                  description: KernelChaosSpec defines the desired state of KernelChaos
                  properties:
                    duration:
                      description: Duration represents the duration of the chaos action
                      type: string
                    failKernRequest:
                      description: FailKernRequest defines the request of kernel injection
                      properties:
                        callchain:
                          description: 'Callchain indicate a special call chain, such
                          as:     ext4_mount       -> mount_subtree          -> ...             ->
                          should_failslab With an optional set of predicates and an
                          optional set of parameters, which used with predicates.
                          You can read call chan and predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                          to learn more. If no special call chain, just keep Callchain
                          empty, which means it will fail at any call chain with slab
                          alloc (eg: kmalloc).'
                          items:
                            description: Frame defines the function signature and predicate
                              in function's body
                            properties:
                              funcname:
                                description: Funcname can be find from kernel source
                                  or `/proc/kallsyms`, such as `ext4_mount`
                                type: string
                              parameters:
                                description: Parameters is used with predicate, for
                                  example, if you want to inject slab error in `d_alloc_parallel(struct
                                  dentry *parent, const struct qstr *name)` with a special
                                  name `bananas`, you need to set it to `struct dentry
                                  *parent, const struct qstr *name` otherwise omit it.
                                type: string
                              predicate:
                                description: Predicate will access the arguments of
                                  this Frame, example with Parameters's, you can set
                                  it to `STRNCMP(name->name, "bananas", 8)` to make
                                  inject only with it, or omit it to inject for all
                                  d_alloc_parallel call chain.
                                type: string
                            type: object
                          type: array
                        failtype:
                          description: 'FailType indicates what to fail, can be set
                          to ''0'' / ''1'' / ''2'' If `0`, indicates slab to fail
                          (should_failslab) If `1`, indicates alloc_page to fail (should_fail_alloc_page)
                          If `2`, indicates bio to fail (should_fail_bio) You can
                          read:   1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                          http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                          to learn more'
                          format: int32
                          maximum: 2
                          minimum: 0
                          type: integer
                        headers:
                          description: 'Headers indicates the appropriate kernel headers
                          you need. Eg: "linux/mmzone.h", "linux/blkdev.h" and so
                          on'
                          items:
                            type: string
                          type: array
                        probability:
                          description: Probability indicates the fails with probability.
                            If you want 1%, please set this field with 1.
                          format: int32
                          maximum: 100
                          minimum: 0
                          type: integer
                        times:
                          description: Times indicates the max times of fails.
                          format: int32
                          minimum: 0
                          type: integer
                      required:
                        - failtype
                      type: object
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - failKernRequest
                    - mode
                    - selector
                  type: object
                name:
                  type: string
                networkChaos:
                  description: NetworkChaosSpec defines the desired state of NetworkChaos
                  properties:
                    action:
                      description: 'Action defines the specific network chaos action.
                      Supported action: partition, netem, delay, loss, duplicate,
                      corrupt Default action: delay'
                      enum:
                        - netem
                        - delay
                        - loss
                        - duplicate
                        - corrupt
                        - partition
                        - bandwidth
                      type: string
                    bandwidth:
                      description: Bandwidth represents the detail about bandwidth control
                        action
                      properties:
                        buffer:
                          description: Buffer is the maximum amount of bytes that tokens
                            can be available for instantaneously.
                          format: int32
                          minimum: 1
                          type: integer
                        limit:
                          description: Limit is the number of bytes that can be queued
                            waiting for tokens to become available.
                          format: int32
                          minimum: 1
                          type: integer
                        minburst:
                          description: Minburst specifies the size of the peakrate bucket.
                            For perfect accuracy, should be set to the MTU of the interface.  If
                            a peakrate is needed, but some burstiness is acceptable,
                            this size can be raised. A 3000 byte minburst allows around
                            3mbit/s of peakrate, given 1000 byte packets.
                          format: int32
                          minimum: 0
                          type: integer
                        peakrate:
                          description: Peakrate is the maximum depletion rate of the
                            bucket. The peakrate does not need to be set, it is only
                            necessary if perfect millisecond timescale shaping is required.
                          format: int64
                          minimum: 0
                          type: integer
                        rate:
                          description: Rate is the speed knob. Allows bps, kbps, mbps,
                            gbps, tbps unit. bps means bytes per second.
                          type: string
                      required:
                        - buffer
                        - limit
                        - rate
                      type: object
                    corrupt:
                      description: Corrupt represents the detail about corrupt action
                      properties:
                        correlation:
                          type: string
                        corrupt:
                          type: string
                      required:
                        - corrupt
                      type: object
                    delay:
                      description: Delay represents the detail about delay action
                      properties:
                        correlation:
                          type: string
                        jitter:
                          type: string
                        latency:
                          type: string
                        reorder:
                          description: ReorderSpec defines details of packet reorder.
                          properties:
                            correlation:
                              type: string
                            gap:
                              type: integer
                            reorder:
                              type: string
                          required:
                            - gap
                            - reorder
                          type: object
                      required:
                        - latency
                      type: object
                    direction:
                      description: Direction represents the direction, this applies
                        on netem and network partition action
                      enum:
                        - to
                        - from
                        - both
                        - ""
                      type: string
                    duplicate:
                      description: DuplicateSpec represents the detail about loss action
                      properties:
                        correlation:
                          type: string
                        duplicate:
                          type: string
                      required:
                        - duplicate
                      type: object
                    duration:
                      description: Duration represents the duration of the chaos action
                      type: string
                    externalTargets:
                      description: ExternalTargets represents network targets outside
                        k8s
                      items:
                        type: string
                      type: array
                    loss:
                      description: Loss represents the detail about loss action
                      properties:
                        correlation:
                          type: string
                        loss:
                          type: string
                      required:
                        - loss
                      type: object
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    target:
                      description: Target represents network target, this applies on
                        netem and network partition action
                      properties:
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - mode
                        - selector
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - action
                    - mode
                    - selector
                  type: object
                podChaos:
                  description: PodChaosSpec defines the attributes that a user creates
                    on a chaos experiment about pods.
                  properties:
                    action:
                      description: 'Action defines the specific pod chaos action. Supported
                      action: pod-kill / pod-failure / container-kill Default action:
                      pod-kill'
                      enum:
                        - pod-kill
                        - pod-failure
                        - container-kill
                      type: string
                    containerNames:
                      description: ContainerNames indicates list of the name of affected
                        container. If not set, all containers will be injected
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration represents the duration of the chaos action.
                        It is required when the action is `PodFailureAction`. A duration
                        string is a possibly signed sequence of decimal numbers, each
                        with optional fraction and a unit suffix, such as "300ms", "-1.5h"
                        or "2h45m". Valid time units are "ns", "us" (or "µs"), "ms",
                        "s", "m", "h".
                      type: string
                    gracePeriod:
                      description: GracePeriod is used in pod-kill action. It represents
                        the duration in seconds before the pod should be deleted. Value
                        must be non-negative integer. The default value is zero that
                        indicates delete immediately.
                      format: int64
                      minimum: 0
                      type: integer
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - action
                    - mode
                    - selector
                  type: object
                schedule:
                  description: Schedule describe the Schedule(describing scheduled chaos)
                    to be injected with chaos nodes. Only used when Type is TypeSchedule.
                  properties:
                    awsChaos:
                      description: AwsChaosSpec is the content of the specification
                        for an AwsChaos
                      properties:
                        action:
                          description: 'Action defines the specific aws chaos action.
                          Supported action: ec2-stop / ec2-restart / detach-volume
                          Default action: ec2-stop'
                          enum:
                            - ec2-stop
                            - ec2-restart
                            - detach-volume
                          type: string
                        awsRegion:
                          description: AwsRegion defines the region of aws.
                          type: string
                        deviceName:
                          description: DeviceName indicates the name of the device.
                            Needed in detach-volume.
                          type: string
                        duration:
                          description: Duration represents the duration of the chaos
                            action.
                          type: string
                        ec2Instance:
                          description: Ec2Instance indicates the ID of the ec2 instance.
                          type: string
                        endpoint:
                          description: Endpoint indicates the endpoint of the aws server.
                            Just used it in test now.
                          type: string
                        secretName:
                          description: SecretName defines the name of kubernetes secret.
                          type: string
                        volumeID:
                          description: EbsVolume indicates the ID of the EBS volume.
                            Needed in detach-volume.
                          type: string
                      required:
                        - action
                        - awsRegion
                        - ec2Instance
                      type: object
                    concurrencyPolicy:
                      enum:
                        - Forbid
                        - Allow
                      type: string
                    dnsChaos:
                      description: DNSChaosSpec defines the desired state of DNSChaos
                      properties:
                        action:
                          description: 'Action defines the specific DNS chaos action.
                          Supported action: error, random Default action: error'
                          enum:
                            - error
                            - random
                          type: string
                        containerNames:
                          description: ContainerNames indicates list of the name of
                            affected container. If not set, all containers will be injected
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration represents the duration of the chaos
                            action
                          type: string
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        patterns:
                          description: "Choose which domain names to take effect, support
                          the placeholder ? and wildcard *, or the Specified domain
                          name. Note:      1. The wildcard * must be at the end of
                          the string. For example, chaos-*.org is invalid.      2.
                          if the patterns is empty, will take effect on all the domain
                          names. For example: \t\tThe value is [\"google.com\", \"github.*\",
                          \"chaos-mes?.org\"], \t\twill take effect on \"google.com\",
                          \"github.com\" and \"chaos-mesh.org\""
                          items:
                            type: string
                          type: array
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - action
                        - mode
                        - selector
                      type: object
                    gcpChaos:
                      description: GcpChaosSpec is the content of the specification
                        for a GcpChaos
                      properties:
                        action:
                          description: 'Action defines the specific gcp chaos action.
                          Supported action: node-stop / node-reset / disk-loss Default
                          action: node-stop'
                          enum:
                            - node-stop
                            - node-reset
                            - disk-loss
                          type: string
                        deviceNames:
                          description: The device name of disks to detach. Needed in
                            disk-loss.
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration represents the duration of the chaos
                            action.
                          type: string
                        instance:
                          description: Instance defines the name of the instance
                          type: string
                        project:
                          description: Project defines the name of gcp project.
                          type: string
                        secretName:
                          description: SecretName defines the name of kubernetes secret.
                            It is used for GCP credentials.
                          type: string
                        zone:
                          description: Zone defines the zone of gcp project.
                          type: string
                      required:
                        - action
                        - instance
                        - project
                        - zone
                      type: object
                    historyLimit:
                      minimum: 1
                      type: integer
                    httpChaos:
                      properties:
                        abort:
                          description: Abort is a rule to abort a http session.
                          type: boolean
                        code:
                          description: Code is a rule to select target by http status
                            code in response.
                          format: int32
                          type: integer
                        delay:
                          description: Delay represents the delay of the target request/response.
                            A duration string is a possibly unsigned sequence of decimal
                            numbers, each with optional fraction and a unit suffix,
                            such as "300ms", "2h45m". Valid time units are "ns", "us"
                            (or "µs"), "ms", "s", "m", "h".
                          type: string
                        duration:
                          description: Duration represents the duration of the chaos
                            action.
                          type: string
                        method:
                          description: Method is a rule to select target by http method
                            in request.
                          type: string
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        patch:
                          description: Patch is a rule to patch some contents in target.
                          properties:
                            body:
                              description: Body is a rule to patch message body of target.
                              properties:
                                type:
                                  description: Type represents the patch type, only
                                    support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396)
                                    currently.
                                  type: string
                                value:
                                  description: Value is the patch contents.
                                  type: string
                              required:
                                - type
                                - value
                              type: object
                            headers:
                              description: 'Headers is a rule to append http headers
                              of target. For example: `[["Set-Cookie", "<one cookie>"],
                              ["Set-Cookie", "<another cookie>"]]`.'
                              items:
                                items:
                                  type: string
                                type: array
                              type: array
                            queries:
                              description: 'Queries is a rule to append uri queries
                              of target(Request only). For example: `[["foo", "bar"],
                              ["foo", "unknown"]]`.'
                              items:
                                items:
                                  type: string
                                type: array
                              type: array
                          type: object
                        path:
                          description: Path is a rule to select target by uri path in
                            http request.
                          type: string
                        port:
                          description: Port represents the target port to be proxy of.
                          format: int32
                          type: integer
                        replace:
                          description: Replace is a rule to replace some contents in
                            target.
                          properties:
                            body:
                              description: Body is a rule to replace http message body
                                in target.
                              format: byte
                              type: string
                            code:
                              description: Code is a rule to replace http status code
                                in response.
                              format: int32
                              type: integer
                            headers:
                              additionalProperties:
                                type: string
                              description: Headers is a rule to replace http headers
                                of target. The key-value pairs represent header name
                                and header value pairs.
                              type: object
                            method:
                              description: Method is a rule to replace http method in
                                request.
                              type: string
                            path:
                              description: Path is rule to to replace uri path in http
                                request.
                              type: string
                            queries:
                              additionalProperties:
                                type: string
                              description: 'Queries is a rule to replace uri queries
                              in http request. For example, with value `{ "foo": "unknown"
                              }`, the `/?foo=bar` will be altered to `/?foo=unknown`,'
                              type: object
                          type: object
                        request_headers:
                          additionalProperties:
                            type: string
                          description: RequestHeaders is a rule to select target by
                            http headers in request. The key-value pairs represent header
                            name and header value pairs.
                          type: object
                        response_headers:
                          additionalProperties:
                            type: string
                          description: ResponseHeaders is a rule to select target by
                            http headers in response. The key-value pairs represent
                            header name and header value pairs.
                          type: object
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        target:
                          description: Target is the object to be selected and injected.
                          enum:
                            - Request
                            - Response
                          type: string
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - mode
                        - selector
                        - target
                      type: object
                    ioChaos:
                      description: IOChaosSpec defines the desired state of IOChaos
                      properties:
                        action:
                          description: 'Action defines the specific pod chaos action.
                          Supported action: latency / fault / attrOverride / mistake'
                          enum:
                            - latency
                            - fault
                            - attrOverride
                            - mistake
                          type: string
                        attr:
                          description: Attr defines the overrided attribution
                          properties:
                            atime:
                              description: Timespec represents a time
                              properties:
                                nsec:
                                  format: int64
                                  type: integer
                                sec:
                                  format: int64
                                  type: integer
                              required:
                                - nsec
                                - sec
                              type: object
                            blocks:
                              format: int64
                              type: integer
                            ctime:
                              description: Timespec represents a time
                              properties:
                                nsec:
                                  format: int64
                                  type: integer
                                sec:
                                  format: int64
                                  type: integer
                              required:
                                - nsec
                                - sec
                              type: object
                            gid:
                              format: int32
                              type: integer
                            ino:
                              format: int64
                              type: integer
                            kind:
                              description: FileType represents type of a file
                              type: string
                            mtime:
                              description: Timespec represents a time
                              properties:
                                nsec:
                                  format: int64
                                  type: integer
                                sec:
                                  format: int64
                                  type: integer
                              required:
                                - nsec
                                - sec
                              type: object
                            nlink:
                              format: int32
                              type: integer
                            perm:
                              type: integer
                            rdev:
                              format: int32
                              type: integer
                            size:
                              format: int64
                              type: integer
                            uid:
                              format: int32
                              type: integer
                          type: object
                        containerNames:
                          description: ContainerNames indicates list of the name of
                            affected container. If not set, all containers will be injected
                          items:
                            type: string
                          type: array
                        delay:
                          description: Delay defines the value of I/O chaos action delay.
                            A delay string is a possibly signed sequence of decimal
                            numbers, each with optional fraction and a unit suffix,
                            such as "300ms". Valid time units are "ns", "us" (or "µs"),
                            "ms", "s", "m", "h".
                          type: string
                        duration:
                          description: Duration represents the duration of the chaos
                            action. It is required when the action is `PodFailureAction`.
                            A duration string is a possibly signed sequence of decimal
                            numbers, each with optional fraction and a unit suffix,
                            such as "300ms", "-1.5h" or "2h45m". Valid time units are
                            "ns", "us" (or "µs"), "ms", "s", "m", "h".
                          type: string
                        errno:
                          description: 'Errno defines the error code that returned by
                          I/O action. refer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html'
                          format: int32
                          type: integer
                        methods:
                          description: 'Methods defines the I/O methods for injecting
                          I/O chaos action. default: all I/O methods.'
                          items:
                            type: string
                          type: array
                        mistake:
                          description: Mistake defines what types of incorrectness are
                            injected to IO operations
                          properties:
                            filling:
                              description: Filling determines what is filled in the
                                miskate data.
                              enum:
                                - zero
                                - random
                              type: string
                            maxLength:
                              description: Max length of each wrong data segment in
                                bytes
                              format: int64
                              minimum: 1
                              type: integer
                            maxOccurrences:
                              description: There will be [1, MaxOccurrences] segments
                                of wrong data.
                              format: int64
                              minimum: 1
                              type: integer
                          type: object
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        path:
                          description: Path defines the path of files for injecting
                            I/O chaos action.
                          type: string
                        percent:
                          description: 'Percent defines the percentage of injection
                          errors and provides a number from 0-100. default: 100.'
                          type: integer
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                        volumePath:
                          description: VolumePath represents the mount path of injected
                            volume
                          type: string
                      required:
                        - action
                        - mode
                        - selector
                        - volumePath
                      type: object
                    jvmChaos:
                      description: JVMChaosSpec defines the desired state of JVMChaos
                      properties:
                        action:
                          description: 'Action defines the specific jvm chaos action.
                          Supported action: delay;return;script;cfl;oom;ccf;tce;cpf;tde;tpf'
                          enum:
                            - delay
                            - return
                            - script
                            - cfl
                            - oom
                            - ccf
                            - tce
                            - cpf
                            - tde
                            - tpf
                          type: string
                        containerNames:
                          description: ContainerNames indicates list of the name of
                            affected container. If not set, all containers will be injected
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration represents the duration of the chaos
                            action
                          type: string
                        flags:
                          additionalProperties:
                            type: string
                          description: Flags represents the flags of action
                          type: object
                        matchers:
                          additionalProperties:
                            type: string
                          description: Matchers represents the matching rules for the
                            target
                          type: object
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        target:
                          description: 'Target defines the specific jvm chaos target.
                          Supported target: servlet;psql;jvm;jedis;http;dubbo;rocketmq;tars;mysql;druid;redisson;rabbitmq;mongodb'
                          enum:
                            - servlet
                            - psql
                            - jvm
                            - jedis
                            - http
                            - dubbo
                            - rocketmq
                            - tars
                            - mysql
                            - druid
                            - redisson
                            - rabbitmq
                            - mongodb
                          type: string
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - action
                        - mode
                        - selector
                        - target
                      type: object
                    kernelChaos:
                      description: KernelChaosSpec defines the desired state of KernelChaos
                      properties:
                        duration:
                          description: Duration represents the duration of the chaos
                            action
                          type: string
                        failKernRequest:
                          description: FailKernRequest defines the request of kernel
                            injection
                          properties:
                            callchain:
                              description: 'Callchain indicate a special call chain,
                              such as:     ext4_mount       -> mount_subtree          ->
                              ...             -> should_failslab With an optional
                              set of predicates and an optional set of parameters,
                              which used with predicates. You can read call chan and
                              predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples
                              to learn more. If no special call chain, just keep Callchain
                              empty, which means it will fail at any call chain with
                              slab alloc (eg: kmalloc).'
                              items:
                                description: Frame defines the function signature and
                                  predicate in function's body
                                properties:
                                  funcname:
                                    description: Funcname can be find from kernel source
                                      or `/proc/kallsyms`, such as `ext4_mount`
                                    type: string
                                  parameters:
                                    description: Parameters is used with predicate,
                                      for example, if you want to inject slab error
                                      in `d_alloc_parallel(struct dentry *parent, const
                                      struct qstr *name)` with a special name `bananas`,
                                      you need to set it to `struct dentry *parent,
                                      const struct qstr *name` otherwise omit it.
                                    type: string
                                  predicate:
                                    description: Predicate will access the arguments
                                      of this Frame, example with Parameters's, you
                                      can set it to `STRNCMP(name->name, "bananas",
                                      8)` to make inject only with it, or omit it to
                                      inject for all d_alloc_parallel call chain.
                                    type: string
                                type: object
                              type: array
                            failtype:
                              description: 'FailType indicates what to fail, can be
                              set to ''0'' / ''1'' / ''2'' If `0`, indicates slab
                              to fail (should_failslab) If `1`, indicates alloc_page
                              to fail (should_fail_alloc_page) If `2`, indicates bio
                              to fail (should_fail_bio) You can read:   1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html   2.
                              http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt
                              to learn more'
                              format: int32
                              maximum: 2
                              minimum: 0
                              type: integer
                            headers:
                              description: 'Headers indicates the appropriate kernel
                              headers you need. Eg: "linux/mmzone.h", "linux/blkdev.h"
                              and so on'
                              items:
                                type: string
                              type: array
                            probability:
                              description: Probability indicates the fails with probability.
                                If you want 1%, please set this field with 1.
                              format: int32
                              maximum: 100
                              minimum: 0
                              type: integer
                            times:
                              description: Times indicates the max times of fails.
                              format: int32
                              minimum: 0
                              type: integer
                          required:
                            - failtype
                          type: object
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - failKernRequest
                        - mode
                        - selector
                      type: object
                    networkChaos:
                      description: NetworkChaosSpec defines the desired state of NetworkChaos
                      properties:
                        action:
                          description: 'Action defines the specific network chaos action.
                          Supported action: partition, netem, delay, loss, duplicate,
                          corrupt Default action: delay'
                          enum:
                            - netem
                            - delay
                            - loss
                            - duplicate
                            - corrupt
                            - partition
                            - bandwidth
                          type: string
                        bandwidth:
                          description: Bandwidth represents the detail about bandwidth
                            control action
                          properties:
                            buffer:
                              description: Buffer is the maximum amount of bytes that
                                tokens can be available for instantaneously.
                              format: int32
                              minimum: 1
                              type: integer
                            limit:
                              description: Limit is the number of bytes that can be
                                queued waiting for tokens to become available.
                              format: int32
                              minimum: 1
                              type: integer
                            minburst:
                              description: Minburst specifies the size of the peakrate
                                bucket. For perfect accuracy, should be set to the MTU
                                of the interface.  If a peakrate is needed, but some
                                burstiness is acceptable, this size can be raised. A
                                3000 byte minburst allows around 3mbit/s of peakrate,
                                given 1000 byte packets.
                              format: int32
                              minimum: 0
                              type: integer
                            peakrate:
                              description: Peakrate is the maximum depletion rate of
                                the bucket. The peakrate does not need to be set, it
                                is only necessary if perfect millisecond timescale shaping
                                is required.
                              format: int64
                              minimum: 0
                              type: integer
                            rate:
                              description: Rate is the speed knob. Allows bps, kbps,
                                mbps, gbps, tbps unit. bps means bytes per second.
                              type: string
                          required:
                            - buffer
                            - limit
                            - rate
                          type: object
                        corrupt:
                          description: Corrupt represents the detail about corrupt action
                          properties:
                            correlation:
                              type: string
                            corrupt:
                              type: string
                          required:
                            - corrupt
                          type: object
                        delay:
                          description: Delay represents the detail about delay action
                          properties:
                            correlation:
                              type: string
                            jitter:
                              type: string
                            latency:
                              type: string
                            reorder:
                              description: ReorderSpec defines details of packet reorder.
                              properties:
                                correlation:
                                  type: string
                                gap:
                                  type: integer
                                reorder:
                                  type: string
                              required:
                                - gap
                                - reorder
                              type: object
                          required:
                            - latency
                          type: object
                        direction:
                          description: Direction represents the direction, this applies
                            on netem and network partition action
                          enum:
                            - to
                            - from
                            - both
                            - ""
                          type: string
                        duplicate:
                          description: DuplicateSpec represents the detail about loss
                            action
                          properties:
                            correlation:
                              type: string
                            duplicate:
                              type: string
                          required:
                            - duplicate
                          type: object
                        duration:
                          description: Duration represents the duration of the chaos
                            action
                          type: string
                        externalTargets:
                          description: ExternalTargets represents network targets outside
                            k8s
                          items:
                            type: string
                          type: array
                        loss:
                          description: Loss represents the detail about loss action
                          properties:
                            correlation:
                              type: string
                            loss:
                              type: string
                          required:
                            - loss
                          type: object
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        target:
                          description: Target represents network target, this applies
                            on netem and network partition action
                          properties:
                            mode:
                              description: 'Mode defines the mode to run chaos action.
                              Supported mode: one / all / fixed / fixed-percent /
                              random-max-percent'
                              enum:
                                - one
                                - all
                                - fixed
                                - fixed-percent
                                - random-max-percent
                              type: string
                            selector:
                              description: Selector is used to select pods that are
                                used to inject chaos action.
                              properties:
                                annotationSelectors:
                                  additionalProperties:
                                    type: string
                                  description: Map of string keys and values that can
                                    be used to select objects. A selector based on annotations.
                                  type: object
                                expressionSelectors:
                                  description: a slice of label selector expressions
                                    that can be used to select objects. A list of selectors
                                    based on set-based label expressions.
                                  items:
                                    description: A label selector requirement is a selector
                                      that contains values, a key, and an operator that
                                      relates the key and values.
                                    properties:
                                      key:
                                        description: key is the label key that the selector
                                          applies to.
                                        type: string
                                      operator:
                                        description: operator represents a key's relationship
                                          to a set of values. Valid operators are In,
                                          NotIn, Exists and DoesNotExist.
                                        type: string
                                      values:
                                        description: values is an array of string values.
                                          If the operator is In or NotIn, the values
                                          array must be non-empty. If the operator is
                                          Exists or DoesNotExist, the values array must
                                          be empty. This array is replaced during a
                                          strategic merge patch.
                                        items:
                                          type: string
                                        type: array
                                    required:
                                      - key
                                      - operator
                                    type: object
                                  type: array
                                fieldSelectors:
                                  additionalProperties:
                                    type: string
                                  description: Map of string keys and values that can
                                    be used to select objects. A selector based on fields.
                                  type: object
                                labelSelectors:
                                  additionalProperties:
                                    type: string
                                  description: Map of string keys and values that can
                                    be used to select objects. A selector based on labels.
                                  type: object
                                namespaces:
                                  description: Namespaces is a set of namespace to which
                                    objects belong.
                                  items:
                                    type: string
                                  type: array
                                nodeSelectors:
                                  additionalProperties:
                                    type: string
                                  description: Map of string keys and values that can
                                    be used to select nodes. Selector which must match
                                    a node's labels, and objects must belong to these
                                    selected nodes.
                                  type: object
                                nodes:
                                  description: Nodes is a set of node name and objects
                                    must belong to these nodes.
                                  items:
                                    type: string
                                  type: array
                                podPhaseSelectors:
                                  description: 'PodPhaseSelectors is a set of condition
                                  of a pod at the current time. supported value: Pending
                                  / Running / Succeeded / Failed / Unknown'
                                  items:
                                    type: string
                                  type: array
                                pods:
                                  additionalProperties:
                                    items:
                                      type: string
                                    type: array
                                  description: Pods is a map of string keys and a set
                                    values that used to select pods. The key defines
                                    the namespace which pods belong, and the each values
                                    is a set of pod names.
                                  type: object
                              type: object
                            value:
                              description: Value is required when the mode is set to
                                `FixedPodMode` / `FixedPercentPodMod` / `RandomMaxPercentPodMod`.
                                If `FixedPodMode`, provide an integer of pods to do
                                chaos action. If `FixedPercentPodMod`, provide a number
                                from 0-100 to specify the percent of pods the server
                                can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                                a number from 0-100 to specify the max percent of pods
                                to do chaos action
                              type: string
                          required:
                            - mode
                            - selector
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - action
                        - mode
                        - selector
                      type: object
                    podChaos:
                      description: PodChaosSpec defines the attributes that a user creates
                        on a chaos experiment about pods.
                      properties:
                        action:
                          description: 'Action defines the specific pod chaos action.
                          Supported action: pod-kill / pod-failure / container-kill
                          Default action: pod-kill'
                          enum:
                            - pod-kill
                            - pod-failure
                            - container-kill
                          type: string
                        containerNames:
                          description: ContainerNames indicates list of the name of
                            affected container. If not set, all containers will be injected
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration represents the duration of the chaos
                            action. It is required when the action is `PodFailureAction`.
                            A duration string is a possibly signed sequence of decimal
                            numbers, each with optional fraction and a unit suffix,
                            such as "300ms", "-1.5h" or "2h45m". Valid time units are
                            "ns", "us" (or "µs"), "ms", "s", "m", "h".
                          type: string
                        gracePeriod:
                          description: GracePeriod is used in pod-kill action. It represents
                            the duration in seconds before the pod should be deleted.
                            Value must be non-negative integer. The default value is
                            zero that indicates delete immediately.
                          format: int64
                          minimum: 0
                          type: integer
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - action
                        - mode
                        - selector
                      type: object
                    schedule:
                      type: string
                    startingDeadlineSeconds:
                      format: int64
                      minimum: 0
                      nullable: true
                      type: integer
                    stressChaos:
                      description: StressChaosSpec defines the desired state of StressChaos
                      properties:
                        containerNames:
                          description: ContainerNames indicates list of the name of
                            affected container. If not set, all containers will be injected
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration represents the duration of the chaos
                            action
                          type: string
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        stressngStressors:
                          description: StressngStressors defines plenty of stressors
                            just like `Stressors` except that it's an experimental feature
                            and more powerful. You can define stressors in `stress-ng`
                            (see also `man stress-ng`) dialect, however not all of the
                            supported stressors are well tested. It maybe retired in
                            later releases. You should always use `Stressors` to define
                            the stressors and use this only when you want more stressors
                            unsupported by `Stressors`. When both `StressngStressors`
                            and `Stressors` are defined, `StressngStressors` wins.
                          type: string
                        stressors:
                          description: Stressors defines plenty of stressors supported
                            to stress system components out. You can use one or more
                            of them to make up various kinds of stresses. At least one
                            of the stressors should be specified.
                          properties:
                            cpu:
                              description: CPUStressor stresses CPU out
                              properties:
                                load:
                                  description: Load specifies P percent loading per
                                    CPU worker. 0 is effectively a sleep (no load) and
                                    100 is full loading.
                                  type: integer
                                options:
                                  description: extend stress-ng options
                                  items:
                                    type: string
                                  type: array
                                workers:
                                  description: Workers specifies N workers to apply
                                    the stressor. Maximum 8192 workers can run by stress-ng
                                  maximum: 8192
                                  type: integer
                              required:
                                - workers
                              type: object
                            memory:
                              description: MemoryStressor stresses virtual memory out
                              properties:
                                options:
                                  description: extend stress-ng options
                                  items:
                                    type: string
                                  type: array
                                size:
                                  description: Size specifies N bytes consumed per vm
                                    worker, default is the total available memory. One
                                    can specify the size as % of total available memory
                                    or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
                                  type: string
                                workers:
                                  description: Workers specifies N workers to apply
                                    the stressor. Maximum 8192 workers can run by stress-ng
                                  maximum: 8192
                                  type: integer
                              required:
                                - workers
                              type: object
                          type: object
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - mode
                        - selector
                      type: object
                    timeChaos:
                      description: TimeChaosSpec defines the desired state of TimeChaos
                      properties:
                        clockIds:
                          description: ClockIds defines all affected clock id All available
                            options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                            "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                            "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                          items:
                            type: string
                          type: array
                        containerNames:
                          description: ContainerNames indicates list of the name of
                            affected container. If not set, all containers will be injected
                          items:
                            type: string
                          type: array
                        duration:
                          description: Duration represents the duration of the chaos
                            action
                          type: string
                        mode:
                          description: 'Mode defines the mode to run chaos action. Supported
                          mode: one / all / fixed / fixed-percent / random-max-percent'
                          enum:
                            - one
                            - all
                            - fixed
                            - fixed-percent
                            - random-max-percent
                          type: string
                        selector:
                          description: Selector is used to select pods that are used
                            to inject chaos action.
                          properties:
                            annotationSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on annotations.
                              type: object
                            expressionSelectors:
                              description: a slice of label selector expressions that
                                can be used to select objects. A list of selectors based
                                on set-based label expressions.
                              items:
                                description: A label selector requirement is a selector
                                  that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship
                                      to a set of values. Valid operators are In, NotIn,
                                      Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values.
                                      If the operator is In or NotIn, the values array
                                      must be non-empty. If the operator is Exists or
                                      DoesNotExist, the values array must be empty.
                                      This array is replaced during a strategic merge
                                      patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                  - key
                                  - operator
                                type: object
                              type: array
                            fieldSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on fields.
                              type: object
                            labelSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select objects. A selector based on labels.
                              type: object
                            namespaces:
                              description: Namespaces is a set of namespace to which
                                objects belong.
                              items:
                                type: string
                              type: array
                            nodeSelectors:
                              additionalProperties:
                                type: string
                              description: Map of string keys and values that can be
                                used to select nodes. Selector which must match a node's
                                labels, and objects must belong to these selected nodes.
                              type: object
                            nodes:
                              description: Nodes is a set of node name and objects must
                                belong to these nodes.
                              items:
                                type: string
                              type: array
                            podPhaseSelectors:
                              description: 'PodPhaseSelectors is a set of condition
                              of a pod at the current time. supported value: Pending
                              / Running / Succeeded / Failed / Unknown'
                              items:
                                type: string
                              type: array
                            pods:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description: Pods is a map of string keys and a set values
                                that used to select pods. The key defines the namespace
                                which pods belong, and the each values is a set of pod
                                names.
                              type: object
                          type: object
                        timeOffset:
                          description: TimeOffset defines the delta time of injected
                            program. It's a possibly signed sequence of decimal numbers,
                            such as "300ms", "-1.5h" or "2h45m". Valid time units are
                            "ns", "us" (or "µs"), "ms", "s", "m", "h".
                          type: string
                        value:
                          description: Value is required when the mode is set to `FixedPodMode`
                            / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                            provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                            provide a number from 0-100 to specify the percent of pods
                            the server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                            a number from 0-100 to specify the max percent of pods to
                            do chaos action
                          type: string
                      required:
                        - mode
                        - selector
                        - timeOffset
                      type: object
                    type:
                      description: 'TODO: use a custom type, as `TemplateType` contains
                      other possible values'
                      type: string
                  required:
                    - schedule
                    - type
                  type: object
                stressChaos:
                  description: StressChaosSpec defines the desired state of StressChaos
                  properties:
                    containerNames:
                      description: ContainerNames indicates list of the name of affected
                        container. If not set, all containers will be injected
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration represents the duration of the chaos action
                      type: string
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    stressngStressors:
                      description: StressngStressors defines plenty of stressors just
                        like `Stressors` except that it's an experimental feature and
                        more powerful. You can define stressors in `stress-ng` (see
                        also `man stress-ng`) dialect, however not all of the supported
                        stressors are well tested. It maybe retired in later releases.
                        You should always use `Stressors` to define the stressors and
                        use this only when you want more stressors unsupported by `Stressors`.
                        When both `StressngStressors` and `Stressors` are defined, `StressngStressors`
                        wins.
                      type: string
                    stressors:
                      description: Stressors defines plenty of stressors supported to
                        stress system components out. You can use one or more of them
                        to make up various kinds of stresses. At least one of the stressors
                        should be specified.
                      properties:
                        cpu:
                          description: CPUStressor stresses CPU out
                          properties:
                            load:
                              description: Load specifies P percent loading per CPU
                                worker. 0 is effectively a sleep (no load) and 100 is
                                full loading.
                              type: integer
                            options:
                              description: extend stress-ng options
                              items:
                                type: string
                              type: array
                            workers:
                              description: Workers specifies N workers to apply the
                                stressor. Maximum 8192 workers can run by stress-ng
                              maximum: 8192
                              type: integer
                          required:
                            - workers
                          type: object
                        memory:
                          description: MemoryStressor stresses virtual memory out
                          properties:
                            options:
                              description: extend stress-ng options
                              items:
                                type: string
                              type: array
                            size:
                              description: Size specifies N bytes consumed per vm worker,
                                default is the total available memory. One can specify
                                the size as % of total available memory or in units
                                of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB.
                              type: string
                            workers:
                              description: Workers specifies N workers to apply the
                                stressor. Maximum 8192 workers can run by stress-ng
                              maximum: 8192
                              type: integer
                          required:
                            - workers
                          type: object
                      type: object
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - mode
                    - selector
                  type: object
                task:
                  description: Task describes the behavior of the custom task. Only
                    used when Type is TypeTask.
                  properties:
                    container:
                      description: Container is the main container image to run in the
                        pod
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                          CMD is used if this is not provided. Variable references
                          $(VAR_NAME) are expanded using the container''s environment.
                          If a variable cannot be resolved, the reference in the input
                          string will be unchanged. The $(VAR_NAME) syntax can be
                          escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                          will never be expanded, regardless of whether the variable
                          exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                          The docker image''s ENTRYPOINT is used if this is not provided.
                          Variable references $(VAR_NAME) are expanded using the container''s
                          environment. If a variable cannot be resolved, the reference
                          in the input string will be unchanged. The $(VAR_NAME) syntax
                          can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                          references will never be expanded, regardless of whether
                          the variable exists or not. Cannot be updated. More info:
                          https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present
                              in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must
                                  be a C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded
                                using the previous defined environment variables in
                                the container and any service environment variables.
                                If a variable cannot be resolved, the reference in
                                the input string will be unchanged. The $(VAR_NAME)
                                syntax can be escaped with a double $$, ie: $$(VAR_NAME).
                                Escaped references will never be expanded, regardless
                                of whether the variable exists or not. Defaults to
                                "".'
                                type: string
                              valueFrom:
                                description: Source for the environment variable's value.
                                  Cannot be used if value is not empty.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key of a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or
                                          its key must be defined
                                        type: boolean
                                    required:
                                      - key
                                    type: object
                                  fieldRef:
                                    description: 'Selects a field of the pod: supports
                                    metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`,
                                    `metadata.annotations[''<KEY>'']`, spec.nodeName,
                                    spec.serviceAccountName, status.hostIP, status.podIP,
                                    status.podIPs.'
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in
                                          the specified API version.
                                        type: string
                                    required:
                                      - fieldPath
                                    type: object
                                  resourceFieldRef:
                                    description: 'Selects a resource of the container:
                                    only resources limits and requests (limits.cpu,
                                    limits.memory, limits.ephemeral-storage, requests.cpu,
                                    requests.memory and requests.ephemeral-storage)
                                    are currently supported.'
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes,
                                        optional for env vars'
                                        type: string
                                      divisor:
                                        anyOf:
                                          - type: integer
                                          - type: string
                                        description: Specifies the output format of
                                          the exposed resources, defaults to "1"
                                        pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                        x-kubernetes-int-or-string: true
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                      - resource
                                    type: object
                                  secretKeyRef:
                                    description: Selects a key of a secret in the pod's
                                      namespace
                                    properties:
                                      key:
                                        description: The key of the secret to select
                                          from.  Must be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                        TODO: Add other useful fields. apiVersion,
                                        kind, uid?'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or its
                                          key must be defined
                                        type: boolean
                                    required:
                                      - key
                                    type: object
                                type: object
                            required:
                              - name
                            type: object
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must
                            be a C_IDENTIFIER. All invalid keys will be reported as
                            an event when the container is starting. When a key exists
                            in multiple sources, the value associated with the last
                            source will take precedence. Values defined by an Env with
                            a duplicate key will take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set
                              of ConfigMaps
                            properties:
                              configMapRef:
                                description: The ConfigMap to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must
                                      be defined
                                    type: boolean
                                type: object
                              prefix:
                                description: An optional identifier to prepend to each
                                  key in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: The Secret to select from
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be
                                      defined
                                    type: boolean
                                type: object
                            type: object
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                          This field is optional to allow higher level config management
                          to default or override container images in workload controllers
                          like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                          Defaults to Always if :latest tag is specified, or IfNotPresent
                          otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Actions that the management system should take
                            in response to container lifecycle events. Cannot be updated.
                          properties:
                            postStart:
                              description: 'PostStart is called immediately after a
                              container is created. If the handler fails, the container
                              is terminated and restarted according to its restart
                              policy. Other management of the container blocks until
                              the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should
                                    be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute
                                        inside the container, the working directory
                                        for the command  is root ('/') in the container's
                                        filesystem. The command is simply exec'd, it
                                        is not run inside a shell, so traditional shell
                                        instructions ('|', etc) won't work. To use a
                                        shell, you need to explicitly call out to that
                                        shell. Exit status of 0 is treated as live/healthy
                                        and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to
                                    perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header
                                          to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the
                                        host. Defaults to HTTP.
                                      type: string
                                  required:
                                    - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                    - port
                                  type: object
                              type: object
                            preStop:
                              description: 'PreStop is called immediately before a container
                              is terminated due to an API request or management event
                              such as liveness/startup probe failure, preemption,
                              resource contention, etc. The handler is not called
                              if the container crashes or exits. The reason for termination
                              is passed to the handler. The Pod''s termination grace
                              period countdown begins before the PreStop hooked is
                              executed. Regardless of the outcome of the handler,
                              the container will eventually terminate within the Pod''s
                              termination grace period. Other management of the container
                              blocks until the hook completes or until the termination
                              grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks'
                              properties:
                                exec:
                                  description: One and only one of the following should
                                    be specified. Exec specifies the action to take.
                                  properties:
                                    command:
                                      description: Command is the command line to execute
                                        inside the container, the working directory
                                        for the command  is root ('/') in the container's
                                        filesystem. The command is simply exec'd, it
                                        is not run inside a shell, so traditional shell
                                        instructions ('|', etc) won't work. To use a
                                        shell, you need to explicitly call out to that
                                        shell. Exit status of 0 is treated as live/healthy
                                        and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                httpGet:
                                  description: HTTPGet specifies the http request to
                                    perform.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults
                                        to the pod IP. You probably want to set "Host"
                                        in httpHeaders instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header
                                          to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Name or number of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                    scheme:
                                      description: Scheme to use for connecting to the
                                        host. Defaults to HTTP.
                                      type: string
                                  required:
                                    - port
                                  type: object
                                tcpSocket:
                                  description: 'TCPSocket specifies an action involving
                                  a TCP port. TCP hooks not yet supported TODO: implement
                                  a realistic TCP lifecycle hook'
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to,
                                      defaults to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                        - type: integer
                                        - type: string
                                      description: Number or name of the port to access
                                        on the container. Number must be in the range
                                        1 to 65535. Name must be an IANA_SVC_NAME.
                                      x-kubernetes-int-or-string: true
                                  required:
                                    - port
                                  type: object
                              type: object
                          type: object
                        livenessProbe:
                          description: 'Periodic probe of container liveness. Container
                          will be restarted if the probe fails. Cannot be updated.
                          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should
                                be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's filesystem.
                                    The command is simply exec'd, it is not run inside
                                    a shell, so traditional shell instructions ('|',
                                    etc) won't work. To use a shell, you need to explicitly
                                    call out to that shell. Exit status of 0 is treated
                                    as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range 1
                                    to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                                - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum value
                                is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range 1
                                    to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                                - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided by
                                the pod spec. Value must be non-negative integer. The
                                value zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). This is an alpha field
                                and requires enabling ProbeTerminationGracePeriod feature
                                gate.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing
                            a port here gives the system additional information about
                            the network connections a container uses, but is primarily
                            informational. Not specifying a port here DOES NOT prevent
                            that port from being exposed. Any port which is listening
                            on the default "0.0.0.0" address inside a container will
                            be accessible from the network. Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in
                              a single container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP
                                  address. This must be a valid port number, 0 < x <
                                  65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port
                                  to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If
                                  specified, this must be a valid port number, 0 < x
                                  < 65536. If HostNetwork is specified, this must match
                                  ContainerPort. Most containers do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a pod
                                  must have a unique name. Name for the port that can
                                  be referred to by services.
                                type: string
                              protocol:
                                default: TCP
                                description: Protocol for port. Must be UDP, TCP, or
                                  SCTP. Defaults to "TCP".
                                type: string
                            required:
                              - containerPort
                            type: object
                          type: array
                          x-kubernetes-list-map-keys:
                            - containerPort
                            - protocol
                          x-kubernetes-list-type: map
                        readinessProbe:
                          description: 'Periodic probe of container service readiness.
                          Container will be removed from service endpoints if the
                          probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should
                                be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's filesystem.
                                    The command is simply exec'd, it is not run inside
                                    a shell, so traditional shell instructions ('|',
                                    etc) won't work. To use a shell, you need to explicitly
                                    call out to that shell. Exit status of 0 is treated
                                    as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range 1
                                    to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                                - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum value
                                is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range 1
                                    to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                                - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided by
                                the pod spec. Value must be non-negative integer. The
                                value zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). This is an alpha field
                                and requires enabling ProbeTerminationGracePeriod feature
                                gate.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        resources:
                          description: 'Compute Resources required by this container.
                          Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                              type: object
                          type: object
                        securityContext:
                          description: 'Security options the pod should run with. More
                          info: https://kubernetes.io/docs/concepts/policy/security-context/
                          More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/'
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether
                              a process can gain more privileges than its parent process.
                              This bool directly controls if the no_new_privs flag
                              will be set on the container process. AllowPrivilegeEscalation
                              is true always when the container is: 1) run as Privileged
                              2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: The capabilities to add/drop when running
                                containers. Defaults to the default set of capabilities
                                granted by the container runtime.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    description: Capability represent POSIX capabilities
                                      type
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              description: Run container in privileged mode. Processes
                                in privileged containers are essentially equivalent
                                to root on the host. Defaults to false.
                              type: boolean
                            procMount:
                              description: procMount denotes the type of proc mount
                                to use for the containers. The default is DefaultProcMount
                                which uses the container runtime defaults for readonly
                                paths and masked paths. This requires the ProcMountType
                                feature flag to be enabled.
                              type: string
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root
                                filesystem. Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be
                                set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as
                                a non-root user. If true, the Kubelet will validate
                                the image at runtime to ensure that it does not run
                                as UID 0 (root) and fail to start the container if it
                                does. If unset or false, no such validation will be
                                performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata
                                if unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext,
                                the value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: The SELinux context to be applied to the
                                container. If unspecified, the container runtime will
                                allocate a random SELinux context for each container.  May
                                also be set in PodSecurityContext.  If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                              type: object
                            seccompProfile:
                              description: The seccomp options to use by this container.
                                If seccomp options are provided at both the pod & container
                                level, the container options override the pod options.
                              properties:
                                localhostProfile:
                                  description: localhostProfile indicates a profile
                                    defined in a file on the node should be used. The
                                    profile must be preconfigured on the node to work.
                                    Must be a descending path, relative to the kubelet's
                                    configured seccomp profile location. Must only be
                                    set if type is "Localhost".
                                  type: string
                                type:
                                  description: "type indicates which kind of seccomp
                                  profile will be applied. Valid options are: \n Localhost
                                  - a profile defined in a file on the node should
                                  be used. RuntimeDefault - the container runtime
                                  default profile should be used. Unconfined - no
                                  profile should be applied."
                                  type: string
                              required:
                                - type
                              type: object
                            windowsOptions:
                              description: The Windows specific settings applied to
                                all containers. If unspecified, the options from the
                                PodSecurityContext will be used. If set in both SecurityContext
                                and PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              properties:
                                gmsaCredentialSpec:
                                  description: GMSACredentialSpec is where the GMSA
                                    admission webhook (https://github.com/kubernetes-sigs/windows-gmsa)
                                    inlines the contents of the GMSA credential spec
                                    named by the GMSACredentialSpecName field.
                                  type: string
                                gmsaCredentialSpecName:
                                  description: GMSACredentialSpecName is the name of
                                    the GMSA credential spec to use.
                                  type: string
                                runAsUserName:
                                  description: The UserName in Windows to run the entrypoint
                                    of the container process. Defaults to the user specified
                                    in image metadata if unspecified. May also be set
                                    in PodSecurityContext. If set in both SecurityContext
                                    and PodSecurityContext, the value specified in SecurityContext
                                    takes precedence.
                                  type: string
                              type: object
                          type: object
                        startupProbe:
                          description: 'StartupProbe indicates that the Pod has successfully
                          initialized. If specified, no other probes are executed
                          until this completes successfully. If this probe fails,
                          the Pod will be restarted, just as if the livenessProbe
                          failed. This can be used to provide different probe parameters
                          at the beginning of a Pod''s lifecycle, when it might take
                          a long time to load data or warm a cache, than during steady-state
                          operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                          properties:
                            exec:
                              description: One and only one of the following should
                                be specified. Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's filesystem.
                                    The command is simply exec'd, it is not run inside
                                    a shell, so traditional shell instructions ('|',
                                    etc) won't work. To use a shell, you need to explicitly
                                    call out to that shell. Exit status of 0 is treated
                                    as live/healthy and non-zero is unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range 1
                                    to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                                - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has
                              started before liveness probes are initiated. More info:
                              https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum value
                                is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: 'TCPSocket specifies an action involving
                              a TCP port. TCP hooks not yet supported TODO: implement
                              a realistic TCP lifecycle hook'
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                  to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                    - type: integer
                                    - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range 1
                                    to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                                - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided by
                                the pod spec. Value must be non-negative integer. The
                                value zero indicates stop immediately via the kill signal
                                (no opportunity to shut down). This is an alpha field
                                and requires enabling ProbeTerminationGracePeriod feature
                                gate.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                              times out. Defaults to 1 second. Minimum value is 1.
                              More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        stdin:
                          description: Whether this container should allocate a buffer
                            for stdin in the container runtime. If this is not set,
                            reads from stdin in the container will always result in
                            EOF. Default is false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the
                            stdin channel after it has been opened by a single attach.
                            When stdin is true the stdin stream will remain open across
                            multiple attach sessions. If stdinOnce is set to true, stdin
                            is opened on container start, is empty until the first client
                            attaches to stdin, and then remains open and accepts data
                            until the client disconnects, at which time stdin is closed
                            and remains closed until the container is restarted. If
                            this flag is false, a container processes that reads from
                            stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the
                          container''s termination message will be written is mounted
                          into the container''s filesystem. Message written is intended
                          to be brief final status, such as an assertion failure message.
                          Will be truncated by the node if greater than 4096 bytes.
                          The total message length across all containers will be limited
                          to 12kb. Defaults to /dev/termination-log. Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be
                            populated. File will use the contents of terminationMessagePath
                            to populate the container status message on both success
                            and failure. FallbackToLogsOnError will use the last chunk
                            of container log output if the termination message file
                            is empty and the container exited with an error. The log
                            output is limited to 2048 bytes or 80 lines, whichever is
                            smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY
                            for itself, also requires 'stdin' to be true. Default is
                            false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to
                            be used by the container.
                          items:
                            description: volumeDevice describes a mapping of a raw block
                              device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container
                                  that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                              - devicePath
                              - name
                            type: object
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume
                              within a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the
                                  volume should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts
                                  are propagated from the host to container and the
                                  other way around. When not set, MountPropagationNone
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise
                                  (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's
                                  volume should be mounted. Defaults to "" (volume's
                                  root).
                                type: string
                              subPathExpr:
                                description: Expanded path within the volume from which
                                  the container's volume should be mounted. Behaves
                                  similarly to SubPath but environment variable references
                                  $(VAR_NAME) are expanded using the container's environment.
                                  Defaults to "" (volume's root). SubPathExpr and SubPath
                                  are mutually exclusive.
                                type: string
                            required:
                              - mountPath
                              - name
                            type: object
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might
                            be configured in the container image. Cannot be updated.
                          type: string
                      required:
                        - name
                      type: object
                    volumes:
                      description: Volumes is a list of volumes that can be mounted
                        by containers in a template.
                      items:
                        description: Volume represents a named volume in a pod that
                          may be accessed by any container in the pod.
                        properties:
                          awsElasticBlockStore:
                            description: 'AWSElasticBlockStore represents an AWS Disk
                            resource that is attached to a kubelet''s host machine
                            and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                            properties:
                              fsType:
                                description: 'Filesystem type of the volume that you
                                want to mount. Tip: Ensure that the filesystem type
                                is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              partition:
                                description: 'The partition in the volume that you want
                                to mount. If omitted, the default is to mount by volume
                                name. Examples: For volume /dev/sda1, you specify
                                the partition as "1". Similarly, the volume partition
                                for /dev/sda is "0" (or you can leave the property
                                empty).'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'Specify "true" to force and set the ReadOnly
                                property in VolumeMounts to "true". If omitted, the
                                default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: boolean
                              volumeID:
                                description: 'Unique ID of the persistent disk resource
                                in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore'
                                type: string
                            required:
                              - volumeID
                            type: object
                          azureDisk:
                            description: AzureDisk represents an Azure Data Disk mount
                              on the host and bind mount to the pod.
                            properties:
                              cachingMode:
                                description: 'Host Caching mode: None, Read Only, Read
                                Write.'
                                type: string
                              diskName:
                                description: The Name of the data disk in the blob storage
                                type: string
                              diskURI:
                                description: The URI the data disk in the blob storage
                                type: string
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex. "ext4",
                                  "xfs", "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              kind:
                                description: 'Expected values Shared: multiple blob
                                disks per storage account  Dedicated: single blob
                                disk per storage account  Managed: azure managed data
                                disk (only in managed availability set). defaults
                                to shared'
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                            required:
                              - diskName
                              - diskURI
                            type: object
                          azureFile:
                            description: AzureFile represents an Azure File Service
                              mount on the host and bind mount to the pod.
                            properties:
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretName:
                                description: the name of secret that contains Azure
                                  Storage Account Name and Key
                                type: string
                              shareName:
                                description: Share Name
                                type: string
                            required:
                              - secretName
                              - shareName
                            type: object
                          cephfs:
                            description: CephFS represents a Ceph FS mount on the host
                              that shares a pod's lifetime
                            properties:
                              monitors:
                                description: 'Required: Monitors is a collection of
                                Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              path:
                                description: 'Optional: Used as the mounted root, rather
                                than the full Ceph tree, default is /'
                                type: string
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: boolean
                              secretFile:
                                description: 'Optional: SecretFile is the path to key
                                ring for User, default is /etc/ceph/user.secret More
                                info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                              secretRef:
                                description: 'Optional: SecretRef is reference to the
                                authentication secret for User, default is empty.
                                More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              user:
                                description: 'Optional: User is the rados user name,
                                default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it'
                                type: string
                            required:
                              - monitors
                            type: object
                          cinder:
                            description: 'Cinder represents a cinder volume attached
                            and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                            properties:
                              fsType:
                                description: 'Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.
                                More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: boolean
                              secretRef:
                                description: 'Optional: points to a secret object containing
                                parameters used to connect to OpenStack.'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              volumeID:
                                description: 'volume id used to identify the volume
                                in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md'
                                type: string
                            required:
                              - volumeID
                            type: object
                          configMap:
                            description: ConfigMap represents a configMap that should
                              populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits used to set permissions
                                on created files by default. Must be an octal value
                                between 0000 and 0777 or a decimal value between 0
                                and 511. YAML accepts both octal and decimal values,
                                JSON requires decimal values for mode bits. Defaults
                                to 0644. Directories within the path are not affected
                                by this setting. This might be in conflict with other
                                options that affect the file mode, like fsGroup, and
                                the result can be other mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: If unspecified, each key-value pair in
                                  the Data field of the referenced ConfigMap will be
                                  projected into the volume as a file whose name is
                                  the key and content is the value. If specified, the
                                  listed keys will be projected into the specified paths,
                                  and unlisted keys will not be present. If a key is
                                  specified which is not present in the ConfigMap, the
                                  volume setup will error unless it is marked optional.
                                  Paths must be relative and may not contain the '..'
                                  path or start with '..'.
                                items:
                                  description: Maps a string key to a path within a
                                    volume.
                                  properties:
                                    key:
                                      description: The key to project.
                                      type: string
                                    mode:
                                      description: 'Optional: mode bits used to set
                                      permissions on this file. Must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: The relative path of the file to
                                        map the key to. May not be an absolute path.
                                        May not contain the path element '..'. May not
                                        start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its keys
                                  must be defined
                                type: boolean
                            type: object
                          csi:
                            description: CSI (Container Storage Interface) represents
                              ephemeral storage that is handled by certain external
                              CSI drivers (Beta feature).
                            properties:
                              driver:
                                description: Driver is the name of the CSI driver that
                                  handles this volume. Consult with your admin for the
                                  correct name as registered in the cluster.
                                type: string
                              fsType:
                                description: Filesystem type to mount. Ex. "ext4", "xfs",
                                  "ntfs". If not provided, the empty value is passed
                                  to the associated CSI driver which will determine
                                  the default filesystem to apply.
                                type: string
                              nodePublishSecretRef:
                                description: NodePublishSecretRef is a reference to
                                  the secret object containing sensitive information
                                  to pass to the CSI driver to complete the CSI NodePublishVolume
                                  and NodeUnpublishVolume calls. This field is optional,
                                  and  may be empty if no secret is required. If the
                                  secret object contains more than one secret, all secret
                                  references are passed.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              readOnly:
                                description: Specifies a read-only configuration for
                                  the volume. Defaults to false (read/write).
                                type: boolean
                              volumeAttributes:
                                additionalProperties:
                                  type: string
                                description: VolumeAttributes stores driver-specific
                                  properties that are passed to the CSI driver. Consult
                                  your driver's documentation for supported values.
                                type: object
                            required:
                              - driver
                            type: object
                          downwardAPI:
                            description: DownwardAPI represents downward API about the
                              pod that should populate this volume
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits to use on created
                                files by default. Must be a Optional: mode bits used
                                to set permissions on created files by default. Must
                                be an octal value between 0000 and 0777 or a decimal
                                value between 0 and 511. YAML accepts both octal and
                                decimal values, JSON requires decimal values for mode
                                bits. Defaults to 0644. Directories within the path
                                are not affected by this setting. This might be in
                                conflict with other options that affect the file mode,
                                like fsGroup, and the result can be other mode bits
                                set.'
                                format: int32
                                type: integer
                              items:
                                description: Items is a list of downward API volume
                                  file
                                items:
                                  description: DownwardAPIVolumeFile represents information
                                    to create the file containing the pod field
                                  properties:
                                    fieldRef:
                                      description: 'Required: Selects a field of the
                                      pod: only annotations, labels, name and namespace
                                      are supported.'
                                      properties:
                                        apiVersion:
                                          description: Version of the schema the FieldPath
                                            is written in terms of, defaults to "v1".
                                          type: string
                                        fieldPath:
                                          description: Path of the field to select in
                                            the specified API version.
                                          type: string
                                      required:
                                        - fieldPath
                                      type: object
                                    mode:
                                      description: 'Optional: mode bits used to set
                                      permissions on this file, must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: 'Required: Path is  the relative
                                      path name of the file to be created. Must not
                                      be absolute or contain the ''..'' path. Must
                                      be utf-8 encoded. The first item of the relative
                                      path must not start with ''..'''
                                      type: string
                                    resourceFieldRef:
                                      description: 'Selects a resource of the container:
                                      only resources limits and requests (limits.cpu,
                                      limits.memory, requests.cpu and requests.memory)
                                      are currently supported.'
                                      properties:
                                        containerName:
                                          description: 'Container name: required for
                                          volumes, optional for env vars'
                                          type: string
                                        divisor:
                                          anyOf:
                                            - type: integer
                                            - type: string
                                          description: Specifies the output format of
                                            the exposed resources, defaults to "1"
                                          pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                          x-kubernetes-int-or-string: true
                                        resource:
                                          description: 'Required: resource to select'
                                          type: string
                                      required:
                                        - resource
                                      type: object
                                  required:
                                    - path
                                  type: object
                                type: array
                            type: object
                          emptyDir:
                            description: 'EmptyDir represents a temporary directory
                            that shares a pod''s lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            properties:
                              medium:
                                description: 'What type of storage medium should back
                                this directory. The default is "" which means to use
                                the node''s default medium. Must be an empty string
                                (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                                type: string
                              sizeLimit:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: 'Total amount of local storage required
                                for this EmptyDir volume. The size limit is also applicable
                                for memory medium. The maximum usage on memory medium
                                EmptyDir would be the minimum value between the SizeLimit
                                specified here and the sum of memory limits of all
                                containers in a pod. The default is nil which means
                                that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir'
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                            type: object
                          ephemeral:
                            description: "Ephemeral represents a volume that is handled
                            by a cluster storage driver. The volume's lifecycle is
                            tied to the pod that defines it - it will be created before
                            the pod starts, and deleted when the pod is removed. \n
                            Use this if: a) the volume is only needed while the pod
                            runs, b) features of normal volumes like restoring from
                            snapshot or capacity    tracking are needed, c) the storage
                            driver is specified through a storage class, and d) the
                            storage driver supports dynamic volume provisioning through
                            \   a PersistentVolumeClaim (see EphemeralVolumeSource
                            for more    information on the connection between this
                            volume type    and PersistentVolumeClaim). \n Use PersistentVolumeClaim
                            or one of the vendor-specific APIs for volumes that persist
                            for longer than the lifecycle of an individual pod. \n
                            Use CSI for light-weight local ephemeral volumes if the
                            CSI driver is meant to be used that way - see the documentation
                            of the driver for more information. \n A pod can use both
                            types of ephemeral volumes and persistent volumes at the
                            same time. \n This is a beta feature and only available
                            when the GenericEphemeralVolume feature gate is enabled."
                            properties:
                              volumeClaimTemplate:
                                description: "Will be used to create a stand-alone PVC
                                to provision the volume. The pod in which this EphemeralVolumeSource
                                is embedded will be the owner of the PVC, i.e. the
                                PVC will be deleted together with the pod.  The name
                                of the PVC will be `<pod name>-<volume name>` where
                                `<volume name>` is the name from the `PodSpec.Volumes`
                                array entry. Pod validation will reject the pod if
                                the concatenated name is not valid for a PVC (for
                                example, too long). \n An existing PVC with that name
                                that is not owned by the pod will *not* be used for
                                the pod to avoid using an unrelated volume by mistake.
                                Starting the pod is then blocked until the unrelated
                                PVC is removed. If such a pre-created PVC is meant
                                to be used by the pod, the PVC has to updated with
                                an owner reference to the pod once the pod exists.
                                Normally this should not be necessary, but it may
                                be useful when manually reconstructing a broken cluster.
                                \n This field is read-only and no changes will be
                                made by Kubernetes to the PVC after it has been created.
                                \n Required, must not be nil."
                                properties:
                                  metadata:
                                    description: May contain labels and annotations
                                      that will be copied into the PVC when creating
                                      it. No other fields are allowed and will be rejected
                                      during validation.
                                    type: object
                                  spec:
                                    description: The specification for the PersistentVolumeClaim.
                                      The entire content is copied unchanged into the
                                      PVC that gets created from this template. The
                                      same fields as in a PersistentVolumeClaim are
                                      also valid here.
                                    properties:
                                      accessModes:
                                        description: 'AccessModes contains the desired
                                        access modes the volume should have. More
                                        info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                        items:
                                          type: string
                                        type: array
                                      dataSource:
                                        description: 'This field can be used to specify
                                        either: * An existing VolumeSnapshot object
                                        (snapshot.storage.k8s.io/VolumeSnapshot) *
                                        An existing PVC (PersistentVolumeClaim) *
                                        An existing custom resource that implements
                                        data population (Alpha) In order to use custom
                                        resource types that implement data population,
                                        the AnyVolumeDataSource feature gate must
                                        be enabled. If the provisioner or an external
                                        controller can support the specified data
                                        source, it will create a new volume based
                                        on the contents of the specified data source.'
                                        properties:
                                          apiGroup:
                                            description: APIGroup is the group for the
                                              resource being referenced. If APIGroup
                                              is not specified, the specified Kind must
                                              be in the core API group. For any other
                                              third-party types, APIGroup is required.
                                            type: string
                                          kind:
                                            description: Kind is the type of resource
                                              being referenced
                                            type: string
                                          name:
                                            description: Name is the name of resource
                                              being referenced
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                      resources:
                                        description: 'Resources represents the minimum
                                        resources the volume should have. More info:
                                        https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                                        properties:
                                          limits:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Limits describes the maximum
                                            amount of compute resources allowed. More
                                            info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                          requests:
                                            additionalProperties:
                                              anyOf:
                                                - type: integer
                                                - type: string
                                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                              x-kubernetes-int-or-string: true
                                            description: 'Requests describes the minimum
                                            amount of compute resources required.
                                            If Requests is omitted for a container,
                                            it defaults to Limits if that is explicitly
                                            specified, otherwise to an implementation-defined
                                            value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                            type: object
                                        type: object
                                      selector:
                                        description: A label query over volumes to consider
                                          for binding.
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list
                                              of label selector requirements. The requirements
                                              are ANDed.
                                            items:
                                              description: A label selector requirement
                                                is a selector that contains values,
                                                a key, and an operator that relates
                                                the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key
                                                    that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a
                                                    key's relationship to a set of values.
                                                    Valid operators are In, NotIn, Exists
                                                    and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of
                                                    string values. If the operator is
                                                    In or NotIn, the values array must
                                                    be non-empty. If the operator is
                                                    Exists or DoesNotExist, the values
                                                    array must be empty. This array
                                                    is replaced during a strategic merge
                                                    patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value}
                                              pairs. A single {key,value} in the matchLabels
                                              map is equivalent to an element of matchExpressions,
                                              whose key field is "key", the operator
                                              is "In", and the values array contains
                                              only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                      storageClassName:
                                        description: 'Name of the StorageClass required
                                        by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                        type: string
                                      volumeMode:
                                        description: volumeMode defines what type of
                                          volume is required by the claim. Value of
                                          Filesystem is implied when not included in
                                          claim spec.
                                        type: string
                                      volumeName:
                                        description: VolumeName is the binding reference
                                          to the PersistentVolume backing this claim.
                                        type: string
                                    type: object
                                required:
                                  - spec
                                type: object
                            type: object
                          fc:
                            description: FC represents a Fibre Channel resource that
                              is attached to a kubelet's host machine and then exposed
                              to the pod.
                            properties:
                              fsType:
                                description: 'Filesystem type to mount. Must be a filesystem
                                type supported by the host operating system. Ex. "ext4",
                                "xfs", "ntfs". Implicitly inferred to be "ext4" if
                                unspecified. TODO: how do we prevent errors in the
                                filesystem from compromising the machine'
                                type: string
                              lun:
                                description: 'Optional: FC target lun number'
                                format: int32
                                type: integer
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                type: boolean
                              targetWWNs:
                                description: 'Optional: FC target worldwide names (WWNs)'
                                items:
                                  type: string
                                type: array
                              wwids:
                                description: 'Optional: FC volume world wide identifiers
                                (wwids) Either wwids or combination of targetWWNs
                                and lun must be set, but not both simultaneously.'
                                items:
                                  type: string
                                type: array
                            type: object
                          flexVolume:
                            description: FlexVolume represents a generic volume resource
                              that is provisioned/attached using an exec based plugin.
                            properties:
                              driver:
                                description: Driver is the name of the driver to use
                                  for this volume.
                                type: string
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex. "ext4",
                                  "xfs", "ntfs". The default filesystem depends on FlexVolume
                                  script.
                                type: string
                              options:
                                additionalProperties:
                                  type: string
                                description: 'Optional: Extra command options if any.'
                                type: object
                              readOnly:
                                description: 'Optional: Defaults to false (read/write).
                                ReadOnly here will force the ReadOnly setting in VolumeMounts.'
                                type: boolean
                              secretRef:
                                description: 'Optional: SecretRef is reference to the
                                secret object containing sensitive information to
                                pass to the plugin scripts. This may be empty if no
                                secret object is specified. If the secret object contains
                                more than one secret, all secrets are passed to the
                                plugin scripts.'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                            required:
                              - driver
                            type: object
                          flocker:
                            description: Flocker represents a Flocker volume attached
                              to a kubelet's host machine. This depends on the Flocker
                              control service being running
                            properties:
                              datasetName:
                                description: Name of the dataset stored as metadata
                                  -> name on the dataset for Flocker should be considered
                                  as deprecated
                                type: string
                              datasetUUID:
                                description: UUID of the dataset. This is unique identifier
                                  of a Flocker dataset
                                type: string
                            type: object
                          gcePersistentDisk:
                            description: 'GCEPersistentDisk represents a GCE Disk resource
                            that is attached to a kubelet''s host machine and then
                            exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                            properties:
                              fsType:
                                description: 'Filesystem type of the volume that you
                                want to mount. Tip: Ensure that the filesystem type
                                is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              partition:
                                description: 'The partition in the volume that you want
                                to mount. If omitted, the default is to mount by volume
                                name. Examples: For volume /dev/sda1, you specify
                                the partition as "1". Similarly, the volume partition
                                for /dev/sda is "0" (or you can leave the property
                                empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                format: int32
                                type: integer
                              pdName:
                                description: 'Unique name of the PD resource in GCE.
                                Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk'
                                type: boolean
                            required:
                              - pdName
                            type: object
                          gitRepo:
                            description: 'GitRepo represents a git repository at a particular
                            revision. DEPRECATED: GitRepo is deprecated. To provision
                            a container with a git repo, mount an EmptyDir into an
                            InitContainer that clones the repo using git, then mount
                            the EmptyDir into the Pod''s container.'
                            properties:
                              directory:
                                description: Target directory name. Must not contain
                                  or start with '..'.  If '.' is supplied, the volume
                                  directory will be the git repository.  Otherwise,
                                  if specified, the volume will contain the git repository
                                  in the subdirectory with the given name.
                                type: string
                              repository:
                                description: Repository URL
                                type: string
                              revision:
                                description: Commit hash for the specified revision.
                                type: string
                            required:
                              - repository
                            type: object
                          glusterfs:
                            description: 'Glusterfs represents a Glusterfs mount on
                            the host that shares a pod''s lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md'
                            properties:
                              endpoints:
                                description: 'EndpointsName is the endpoint name that
                                details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              path:
                                description: 'Path is the Glusterfs volume path. More
                                info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the Glusterfs
                                volume to be mounted with read-only permissions. Defaults
                                to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod'
                                type: boolean
                            required:
                              - endpoints
                              - path
                            type: object
                          hostPath:
                            description: 'HostPath represents a pre-existing file or
                            directory on the host machine that is directly exposed
                            to the container. This is generally used for system agents
                            or other privileged things that are allowed to see the
                            host machine. Most containers will NOT need this. More
                            info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                            --- TODO(jonesdl) We need to restrict who can use host
                            directory mounts and who can/can not mount host directories
                            as read/write.'
                            properties:
                              path:
                                description: 'Path of the directory on the host. If
                                the path is a symlink, it will follow the link to
                                the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                              type:
                                description: 'Type for HostPath Volume Defaults to ""
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath'
                                type: string
                            required:
                              - path
                            type: object
                          iscsi:
                            description: 'ISCSI represents an ISCSI Disk resource that
                            is attached to a kubelet''s host machine and then exposed
                            to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md'
                            properties:
                              chapAuthDiscovery:
                                description: whether support iSCSI Discovery CHAP authentication
                                type: boolean
                              chapAuthSession:
                                description: whether support iSCSI Session CHAP authentication
                                type: boolean
                              fsType:
                                description: 'Filesystem type of the volume that you
                                want to mount. Tip: Ensure that the filesystem type
                                is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              initiatorName:
                                description: Custom iSCSI Initiator Name. If initiatorName
                                  is specified with iscsiInterface simultaneously, new
                                  iSCSI interface <target portal>:<volume name> will
                                  be created for the connection.
                                type: string
                              iqn:
                                description: Target iSCSI Qualified Name.
                                type: string
                              iscsiInterface:
                                description: iSCSI Interface Name that uses an iSCSI
                                  transport. Defaults to 'default' (tcp).
                                type: string
                              lun:
                                description: iSCSI Target Lun number.
                                format: int32
                                type: integer
                              portals:
                                description: iSCSI Target Portal List. The portal is
                                  either an IP or ip_addr:port if the port is other
                                  than default (typically TCP ports 860 and 3260).
                                items:
                                  type: string
                                type: array
                              readOnly:
                                description: ReadOnly here will force the ReadOnly setting
                                  in VolumeMounts. Defaults to false.
                                type: boolean
                              secretRef:
                                description: CHAP Secret for iSCSI target and initiator
                                  authentication
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              targetPortal:
                                description: iSCSI Target Portal. The Portal is either
                                  an IP or ip_addr:port if the port is other than default
                                  (typically TCP ports 860 and 3260).
                                type: string
                            required:
                              - iqn
                              - lun
                              - targetPortal
                            type: object
                          name:
                            description: 'Volume''s name. Must be a DNS_LABEL and unique
                            within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          nfs:
                            description: 'NFS represents an NFS mount on the host that
                            shares a pod''s lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                            properties:
                              path:
                                description: 'Path that is exported by the NFS server.
                                More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the NFS export
                                to be mounted with read-only permissions. Defaults
                                to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: boolean
                              server:
                                description: 'Server is the hostname or IP address of
                                the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs'
                                type: string
                            required:
                              - path
                              - server
                            type: object
                          persistentVolumeClaim:
                            description: 'PersistentVolumeClaimVolumeSource represents
                            a reference to a PersistentVolumeClaim in the same namespace.
                            More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                            properties:
                              claimName:
                                description: 'ClaimName is the name of a PersistentVolumeClaim
                                in the same namespace as the pod using this volume.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                type: string
                              readOnly:
                                description: Will force the ReadOnly setting in VolumeMounts.
                                  Default false.
                                type: boolean
                            required:
                              - claimName
                            type: object
                          photonPersistentDisk:
                            description: PhotonPersistentDisk represents a PhotonController
                              persistent disk attached and mounted on kubelets host
                              machine
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex. "ext4",
                                  "xfs", "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              pdID:
                                description: ID that identifies Photon Controller persistent
                                  disk
                                type: string
                            required:
                              - pdID
                            type: object
                          portworxVolume:
                            description: PortworxVolume represents a portworx volume
                              attached and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: FSType represents the filesystem type to
                                  mount Must be a filesystem type supported by the host
                                  operating system. Ex. "ext4", "xfs". Implicitly inferred
                                  to be "ext4" if unspecified.
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              volumeID:
                                description: VolumeID uniquely identifies a Portworx
                                  volume
                                type: string
                            required:
                              - volumeID
                            type: object
                          projected:
                            description: Items for all in one resources secrets, configmaps,
                              and downward API
                            properties:
                              defaultMode:
                                description: Mode bits used to set permissions on created
                                  files by default. Must be an octal value between 0000
                                  and 0777 or a decimal value between 0 and 511. YAML
                                  accepts both octal and decimal values, JSON requires
                                  decimal values for mode bits. Directories within the
                                  path are not affected by this setting. This might
                                  be in conflict with other options that affect the
                                  file mode, like fsGroup, and the result can be other
                                  mode bits set.
                                format: int32
                                type: integer
                              sources:
                                description: list of volume projections
                                items:
                                  description: Projection that may be projected along
                                    with other supported volume types
                                  properties:
                                    configMap:
                                      description: information about the configMap data
                                        to project
                                      properties:
                                        items:
                                          description: If unspecified, each key-value
                                            pair in the Data field of the referenced
                                            ConfigMap will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed keys
                                            will be projected into the specified paths,
                                            and unlisted keys will not be present. If
                                            a key is specified which is not present
                                            in the ConfigMap, the volume setup will
                                            error unless it is marked optional. Paths
                                            must be relative and may not contain the
                                            '..' path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits used
                                                to set permissions on this file. Must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: The relative path of the
                                                  file to map the key to. May not be
                                                  an absolute path. May not contain
                                                  the path element '..'. May not start
                                                  with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the ConfigMap
                                            or its keys must be defined
                                          type: boolean
                                      type: object
                                    downwardAPI:
                                      description: information about the downwardAPI
                                        data to project
                                      properties:
                                        items:
                                          description: Items is a list of DownwardAPIVolume
                                            file
                                          items:
                                            description: DownwardAPIVolumeFile represents
                                              information to create the file containing
                                              the pod field
                                            properties:
                                              fieldRef:
                                                description: 'Required: Selects a field
                                                of the pod: only annotations, labels,
                                                name and namespace are supported.'
                                                properties:
                                                  apiVersion:
                                                    description: Version of the schema
                                                      the FieldPath is written in terms
                                                      of, defaults to "v1".
                                                    type: string
                                                  fieldPath:
                                                    description: Path of the field to
                                                      select in the specified API version.
                                                    type: string
                                                required:
                                                  - fieldPath
                                                type: object
                                              mode:
                                                description: 'Optional: mode bits used
                                                to set permissions on this file, must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: 'Required: Path is  the
                                                relative path name of the file to
                                                be created. Must not be absolute or
                                                contain the ''..'' path. Must be utf-8
                                                encoded. The first item of the relative
                                                path must not start with ''..'''
                                                type: string
                                              resourceFieldRef:
                                                description: 'Selects a resource of
                                                the container: only resources limits
                                                and requests (limits.cpu, limits.memory,
                                                requests.cpu and requests.memory)
                                                are currently supported.'
                                                properties:
                                                  containerName:
                                                    description: 'Container name: required
                                                    for volumes, optional for env
                                                    vars'
                                                    type: string
                                                  divisor:
                                                    anyOf:
                                                      - type: integer
                                                      - type: string
                                                    description: Specifies the output
                                                      format of the exposed resources,
                                                      defaults to "1"
                                                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                                    x-kubernetes-int-or-string: true
                                                  resource:
                                                    description: 'Required: resource
                                                    to select'
                                                    type: string
                                                required:
                                                  - resource
                                                type: object
                                            required:
                                              - path
                                            type: object
                                          type: array
                                      type: object
                                    secret:
                                      description: information about the secret data
                                        to project
                                      properties:
                                        items:
                                          description: If unspecified, each key-value
                                            pair in the Data field of the referenced
                                            Secret will be projected into the volume
                                            as a file whose name is the key and content
                                            is the value. If specified, the listed keys
                                            will be projected into the specified paths,
                                            and unlisted keys will not be present. If
                                            a key is specified which is not present
                                            in the Secret, the volume setup will error
                                            unless it is marked optional. Paths must
                                            be relative and may not contain the '..'
                                            path or start with '..'.
                                          items:
                                            description: Maps a string key to a path
                                              within a volume.
                                            properties:
                                              key:
                                                description: The key to project.
                                                type: string
                                              mode:
                                                description: 'Optional: mode bits used
                                                to set permissions on this file. Must
                                                be an octal value between 0000 and
                                                0777 or a decimal value between 0
                                                and 511. YAML accepts both octal and
                                                decimal values, JSON requires decimal
                                                values for mode bits. If not specified,
                                                the volume defaultMode will be used.
                                                This might be in conflict with other
                                                options that affect the file mode,
                                                like fsGroup, and the result can be
                                                other mode bits set.'
                                                format: int32
                                                type: integer
                                              path:
                                                description: The relative path of the
                                                  file to map the key to. May not be
                                                  an absolute path. May not contain
                                                  the path element '..'. May not start
                                                  with the string '..'.
                                                type: string
                                            required:
                                              - key
                                              - path
                                            type: object
                                          type: array
                                        name:
                                          description: 'Name of the referent. More info:
                                          https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                          TODO: Add other useful fields. apiVersion,
                                          kind, uid?'
                                          type: string
                                        optional:
                                          description: Specify whether the Secret or
                                            its key must be defined
                                          type: boolean
                                      type: object
                                    serviceAccountToken:
                                      description: information about the serviceAccountToken
                                        data to project
                                      properties:
                                        audience:
                                          description: Audience is the intended audience
                                            of the token. A recipient of a token must
                                            identify itself with an identifier specified
                                            in the audience of the token, and otherwise
                                            should reject the token. The audience defaults
                                            to the identifier of the apiserver.
                                          type: string
                                        expirationSeconds:
                                          description: ExpirationSeconds is the requested
                                            duration of validity of the service account
                                            token. As the token approaches expiration,
                                            the kubelet volume plugin will proactively
                                            rotate the service account token. The kubelet
                                            will start trying to rotate the token if
                                            the token is older than 80 percent of its
                                            time to live or if the token is older than
                                            24 hours.Defaults to 1 hour and must be
                                            at least 10 minutes.
                                          format: int64
                                          type: integer
                                        path:
                                          description: Path is the path relative to
                                            the mount point of the file to project the
                                            token into.
                                          type: string
                                      required:
                                        - path
                                      type: object
                                  type: object
                                type: array
                            type: object
                          quobyte:
                            description: Quobyte represents a Quobyte mount on the host
                              that shares a pod's lifetime
                            properties:
                              group:
                                description: Group to map volume access to Default is
                                  no group
                                type: string
                              readOnly:
                                description: ReadOnly here will force the Quobyte volume
                                  to be mounted with read-only permissions. Defaults
                                  to false.
                                type: boolean
                              registry:
                                description: Registry represents a single or multiple
                                  Quobyte Registry services specified as a string as
                                  host:port pair (multiple entries are separated with
                                  commas) which acts as the central registry for volumes
                                type: string
                              tenant:
                                description: Tenant owning the given Quobyte volume
                                  in the Backend Used with dynamically provisioned Quobyte
                                  volumes, value is set by the plugin
                                type: string
                              user:
                                description: User to map volume access to Defaults to
                                  serivceaccount user
                                type: string
                              volume:
                                description: Volume is a string that references an already
                                  created Quobyte volume by name.
                                type: string
                            required:
                              - registry
                              - volume
                            type: object
                          rbd:
                            description: 'RBD represents a Rados Block Device mount
                            on the host that shares a pod''s lifetime. More info:
                            https://examples.k8s.io/volumes/rbd/README.md'
                            properties:
                              fsType:
                                description: 'Filesystem type of the volume that you
                                want to mount. Tip: Ensure that the filesystem type
                                is supported by the host operating system. Examples:
                                "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4"
                                if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                                TODO: how do we prevent errors in the filesystem from
                                compromising the machine'
                                type: string
                              image:
                                description: 'The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              keyring:
                                description: 'Keyring is the path to key ring for RBDUser.
                                Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              monitors:
                                description: 'A collection of Ceph monitors. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                items:
                                  type: string
                                type: array
                              pool:
                                description: 'The rados pool name. Default is rbd. More
                                info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                              readOnly:
                                description: 'ReadOnly here will force the ReadOnly
                                setting in VolumeMounts. Defaults to false. More info:
                                https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: boolean
                              secretRef:
                                description: 'SecretRef is name of the authentication
                                secret for RBDUser. If provided overrides keyring.
                                Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              user:
                                description: 'The rados user name. Default is admin.
                                More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it'
                                type: string
                            required:
                              - image
                              - monitors
                            type: object
                          scaleIO:
                            description: ScaleIO represents a ScaleIO persistent volume
                              attached and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex. "ext4",
                                  "xfs", "ntfs". Default is "xfs".
                                type: string
                              gateway:
                                description: The host address of the ScaleIO API Gateway.
                                type: string
                              protectionDomain:
                                description: The name of the ScaleIO Protection Domain
                                  for the configured storage.
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: SecretRef references to the secret for
                                  ScaleIO user and other sensitive information. If this
                                  is not provided, Login operation will fail.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              sslEnabled:
                                description: Flag to enable/disable SSL communication
                                  with Gateway, default false
                                type: boolean
                              storageMode:
                                description: Indicates whether the storage for a volume
                                  should be ThickProvisioned or ThinProvisioned. Default
                                  is ThinProvisioned.
                                type: string
                              storagePool:
                                description: The ScaleIO Storage Pool associated with
                                  the protection domain.
                                type: string
                              system:
                                description: The name of the storage system as configured
                                  in ScaleIO.
                                type: string
                              volumeName:
                                description: The name of a volume already created in
                                  the ScaleIO system that is associated with this volume
                                  source.
                                type: string
                            required:
                              - gateway
                              - secretRef
                              - system
                            type: object
                          secret:
                            description: 'Secret represents a secret that should populate
                            this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                            properties:
                              defaultMode:
                                description: 'Optional: mode bits used to set permissions
                                on created files by default. Must be an octal value
                                between 0000 and 0777 or a decimal value between 0
                                and 511. YAML accepts both octal and decimal values,
                                JSON requires decimal values for mode bits. Defaults
                                to 0644. Directories within the path are not affected
                                by this setting. This might be in conflict with other
                                options that affect the file mode, like fsGroup, and
                                the result can be other mode bits set.'
                                format: int32
                                type: integer
                              items:
                                description: If unspecified, each key-value pair in
                                  the Data field of the referenced Secret will be projected
                                  into the volume as a file whose name is the key and
                                  content is the value. If specified, the listed keys
                                  will be projected into the specified paths, and unlisted
                                  keys will not be present. If a key is specified which
                                  is not present in the Secret, the volume setup will
                                  error unless it is marked optional. Paths must be
                                  relative and may not contain the '..' path or start
                                  with '..'.
                                items:
                                  description: Maps a string key to a path within a
                                    volume.
                                  properties:
                                    key:
                                      description: The key to project.
                                      type: string
                                    mode:
                                      description: 'Optional: mode bits used to set
                                      permissions on this file. Must be an octal value
                                      between 0000 and 0777 or a decimal value between
                                      0 and 511. YAML accepts both octal and decimal
                                      values, JSON requires decimal values for mode
                                      bits. If not specified, the volume defaultMode
                                      will be used. This might be in conflict with
                                      other options that affect the file mode, like
                                      fsGroup, and the result can be other mode bits
                                      set.'
                                      format: int32
                                      type: integer
                                    path:
                                      description: The relative path of the file to
                                        map the key to. May not be an absolute path.
                                        May not contain the path element '..'. May not
                                        start with the string '..'.
                                      type: string
                                  required:
                                    - key
                                    - path
                                  type: object
                                type: array
                              optional:
                                description: Specify whether the Secret or its keys
                                  must be defined
                                type: boolean
                              secretName:
                                description: 'Name of the secret in the pod''s namespace
                                to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret'
                                type: string
                            type: object
                          storageos:
                            description: StorageOS represents a StorageOS volume attached
                              and mounted on Kubernetes nodes.
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex. "ext4",
                                  "xfs", "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              readOnly:
                                description: Defaults to false (read/write). ReadOnly
                                  here will force the ReadOnly setting in VolumeMounts.
                                type: boolean
                              secretRef:
                                description: SecretRef specifies the secret to use for
                                  obtaining the StorageOS API credentials.  If not specified,
                                  default values will be attempted.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                    type: string
                                type: object
                              volumeName:
                                description: VolumeName is the human-readable name of
                                  the StorageOS volume.  Volume names are only unique
                                  within a namespace.
                                type: string
                              volumeNamespace:
                                description: VolumeNamespace specifies the scope of
                                  the volume within StorageOS.  If no namespace is specified
                                  then the Pod's namespace will be used.  This allows
                                  the Kubernetes name scoping to be mirrored within
                                  StorageOS for tighter integration. Set VolumeName
                                  to any name to override the default behaviour. Set
                                  to "default" if you are not using namespaces within
                                  StorageOS. Namespaces that do not pre-exist within
                                  StorageOS will be created.
                                type: string
                            type: object
                          vsphereVolume:
                            description: VsphereVolume represents a vSphere volume attached
                              and mounted on kubelets host machine
                            properties:
                              fsType:
                                description: Filesystem type to mount. Must be a filesystem
                                  type supported by the host operating system. Ex. "ext4",
                                  "xfs", "ntfs". Implicitly inferred to be "ext4" if
                                  unspecified.
                                type: string
                              storagePolicyID:
                                description: Storage Policy Based Management (SPBM)
                                  profile ID associated with the StoragePolicyName.
                                type: string
                              storagePolicyName:
                                description: Storage Policy Based Management (SPBM)
                                  profile name.
                                type: string
                              volumePath:
                                description: Path that identifies vSphere volume vmdk
                                type: string
                            required:
                              - volumePath
                            type: object
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                templateType:
                  type: string
                timeChaos:
                  description: TimeChaosSpec defines the desired state of TimeChaos
                  properties:
                    clockIds:
                      description: ClockIds defines all affected clock id All available
                        options are ["CLOCK_REALTIME","CLOCK_MONOTONIC","CLOCK_PROCESS_CPUTIME_ID","CLOCK_THREAD_CPUTIME_ID",
                        "CLOCK_MONOTONIC_RAW","CLOCK_REALTIME_COARSE","CLOCK_MONOTONIC_COARSE","CLOCK_BOOTTIME","CLOCK_REALTIME_ALARM",
                        "CLOCK_BOOTTIME_ALARM"] Default value is ["CLOCK_REALTIME"]
                      items:
                        type: string
                      type: array
                    containerNames:
                      description: ContainerNames indicates list of the name of affected
                        container. If not set, all containers will be injected
                      items:
                        type: string
                      type: array
                    duration:
                      description: Duration represents the duration of the chaos action
                      type: string
                    mode:
                      description: 'Mode defines the mode to run chaos action. Supported
                      mode: one / all / fixed / fixed-percent / random-max-percent'
                      enum:
                        - one
                        - all
                        - fixed
                        - fixed-percent
                        - random-max-percent
                      type: string
                    selector:
                      description: Selector is used to select pods that are used to
                        inject chaos action.
                      properties:
                        annotationSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on annotations.
                          type: object
                        expressionSelectors:
                          description: a slice of label selector expressions that can
                            be used to select objects. A list of selectors based on
                            set-based label expressions.
                          items:
                            description: A label selector requirement is a selector
                              that contains values, a key, and an operator that relates
                              the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship
                                  to a set of values. Valid operators are In, NotIn,
                                  Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If
                                  the operator is In or NotIn, the values array must
                                  be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced
                                  during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                              - key
                              - operator
                            type: object
                          type: array
                        fieldSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on fields.
                          type: object
                        labelSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select objects. A selector based on labels.
                          type: object
                        namespaces:
                          description: Namespaces is a set of namespace to which objects
                            belong.
                          items:
                            type: string
                          type: array
                        nodeSelectors:
                          additionalProperties:
                            type: string
                          description: Map of string keys and values that can be used
                            to select nodes. Selector which must match a node's labels,
                            and objects must belong to these selected nodes.
                          type: object
                        nodes:
                          description: Nodes is a set of node name and objects must
                            belong to these nodes.
                          items:
                            type: string
                          type: array
                        podPhaseSelectors:
                          description: 'PodPhaseSelectors is a set of condition of a
                          pod at the current time. supported value: Pending / Running
                          / Succeeded / Failed / Unknown'
                          items:
                            type: string
                          type: array
                        pods:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description: Pods is a map of string keys and a set values
                            that used to select pods. The key defines the namespace
                            which pods belong, and the each values is a set of pod names.
                          type: object
                      type: object
                    timeOffset:
                      description: TimeOffset defines the delta time of injected program.
                        It's a possibly signed sequence of decimal numbers, such as
                        "300ms", "-1.5h" or "2h45m". Valid time units are "ns", "us"
                        (or "µs"), "ms", "s", "m", "h".
                      type: string
                    value:
                      description: Value is required when the mode is set to `FixedPodMode`
                        / `FixedPercentPodMod` / `RandomMaxPercentPodMod`. If `FixedPodMode`,
                        provide an integer of pods to do chaos action. If `FixedPercentPodMod`,
                        provide a number from 0-100 to specify the percent of pods the
                        server can do chaos action. IF `RandomMaxPercentPodMod`,  provide
                        a number from 0-100 to specify the max percent of pods to do
                        chaos action
                      type: string
                  required:
                    - mode
                    - selector
                    - timeOffset
                  type: object
              required:
                - name
                - templateType
              type: object
            status:
              description: Most recently observed status of the object
              properties:
                endTime:
                  description: Most recently observed status of the object
                  format: date-time
                  type: string
                phase:
                  description: Phase is the current status of an object
                  enum:
                    - Running
                    - Complete
                    - Failed
                    - Chaos
                  type: string
                reason:
                  description: A brief CamelCase message indicating details about why
                    the service is in this Phase. e.g. 'Evicted'
                  type: string
                startTime:
                  description: RFC 3339 date and time at which the object was acknowledged
                    by the Kubelet. This is before the Kubelet pulled the container
                    image(s) for the pod.
                  format: date-time
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]
