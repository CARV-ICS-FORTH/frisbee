
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: templates.frisbee.io
spec:
  group: frisbee.io
  names:
    kind: Template
    listKind: TemplateList
    plural: templates
    singular: template
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MonitorSpec defines the template of services
            properties:
              monitors:
                additionalProperties:
                  properties:
                    inputs:
                      description: Inputs are dynamic fields that populate the spec.
                      properties:
                        parameters:
                          additionalProperties:
                            type: string
                          description: Parameters define dynamically valued fields.
                            The values are given by higher level entities, such as
                            the workflow.
                          type: object
                      type: object
                    spec:
                      description: Spec is the Service specification whose values
                        will be replaced by parameters.
                      type: string
                  required:
                  - spec
                  type: object
                description: Monitors are indices to monitoring packages
                type: object
              services:
                additionalProperties:
                  properties:
                    inputs:
                      description: Inputs are dynamic fields that populate the spec.
                      properties:
                        parameters:
                          additionalProperties:
                            type: string
                          description: Parameters define dynamically valued fields.
                            The values are given by higher level entities, such as
                            the workflow.
                          type: object
                      type: object
                    spec:
                      description: Spec is the Service specification whose values
                        will be replaced by parameters.
                      type: string
                  required:
                  - spec
                  type: object
                description: Services are indices to service specifications
                type: object
            type: object
          status:
            description: Most recently observed status of the object
            properties:
              isRegistered:
                type: boolean
              phase:
                description: Phase is the current status of an object
                type: string
              reason:
                description: A brief CamelCase message indicating details about why
                  the service is in this Phase. e.g. 'Evicted'
                type: string
            required:
            - isRegistered
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
