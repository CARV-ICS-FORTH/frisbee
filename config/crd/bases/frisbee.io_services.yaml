
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: services.frisbee.io
spec:
  group: frisbee.io
  names:
    kind: Service
    listKind: ServiceList
    plural: services
    singular: service
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the behavior of the object
            properties:
              args:
                description: Args define arguments to the command of the image
                items:
                  type: string
                type: array
              command:
                description: Command overwrites the default command of the image
                items:
                  type: string
                type: array
              domain:
                description: Domain specifies the location where Service will be placed.
                  For this to work, the nodes included in the domain must have the
                  label domain:{{domain-name}}
                type: string
              env:
                description: Env defines environment variables for the containers
                  that run the Service
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: 'Variable references $(VAR_NAME) are expanded using
                        the previous defined environment variables in the container
                        and any service environment variables. If a variable cannot
                        be resolved, the reference in the input string will be unchanged.
                        The $(VAR_NAME) syntax can be escaped with a double $$, ie:
                        $$(VAR_NAME). Escaped references will never be expanded, regardless
                        of whether the variable exists or not. Defaults to "".'
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                        fieldRef:
                          description: 'Selects a field of the pod: supports metadata.name,
                            metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP,
                            status.podIP, status.podIPs.'
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                        resourceFieldRef:
                          description: 'Selects a resource of the container: only
                            resources limits and requests (limits.cpu, limits.memory,
                            limits.ephemeral-storage, requests.cpu, requests.memory
                            and requests.ephemeral-storage) are currently supported.'
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                      type: object
                  required:
                  - name
                  type: object
                type: array
              image:
                description: Image describes the name of the container for this node
                type: string
              ports:
                description: Ports lists the ports required for the service to work
                items:
                  properties:
                    name:
                      type: string
                    port:
                      format: int32
                      type: integer
                  required:
                  - name
                  - port
                  type: object
                type: array
              resources:
                description: Resources specifies limitations as to how the container
                  will access host resources
                properties:
                  cpu:
                    type: string
                  disk:
                    description: Disk specifies the capabilities of the emulated storage
                      device.
                    properties:
                      readbps:
                        description: ReadBPS limits read rate (bytes per second)
                        type: string
                      readiops:
                        description: ReadIOPS limits read rate (IO per second)
                        type: string
                      writebps:
                        description: WriteBPS limits write rate (bytes per second)
                        type: string
                      writeiops:
                        description: WriteIOPS limits write rate (IO per second)
                        type: string
                    type: object
                  memory:
                    type: string
                  nic:
                    description: NIC specifies the capabilities of the emulated network
                      interface.
                    properties:
                      latency:
                        type: string
                      rate:
                        type: string
                    type: object
                type: object
            required:
            - image
            type: object
          status:
            description: Most recently observed status of the object
            properties:
              endTime:
                description: Most recently observed status of the object
                format: date-time
                type: string
              phase:
                description: Phase is the current status of an object
                enum:
                - Running
                - Failed
                - Succeed
                type: string
              reason:
                description: A brief CamelCase message indicating details about why
                  the service is in this Phase. e.g. 'Evicted'
                type: string
              startTime:
                description: RFC 3339 date and time at which the object was acknowledged
                  by the Kubelet. This is before the Kubelet pulled the container
                  image(s) for the pod.
                format: date-time
                type: string
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
