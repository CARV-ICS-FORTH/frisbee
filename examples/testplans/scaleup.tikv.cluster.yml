apiVersion: frisbee.io/v1alpha1
kind: Workflow
metadata:
  name: run-tikv-cluster
spec:
  importMonitors: [ "sysmon/container", "ycsbmon/client" ]
  ingress:
    host: platform.science-hangar.eu

  testOracle:
    pass: >-
      {{.IsSuccessful "runners"}} == true

  actions:
    # Create a placement driver
    - action: Service
      name: master
      service:
        fromTemplate:
          templateRef: tikv/placementDriver

    # Create a database cluster
    - action: Cluster
      depends: { running: [ master ] }
      name: workers
      cluster:
        templateRef: tikv/worker
        instances: 10
        inputs:
          - { placementDriver: .service.master.any }

    # Ingest keys in parallel, into different ranges
    - action: Cluster
      name: "loaders"
      depends: { running: [ workers ] }
      cluster:
        templateRef: ycsb-tikv/loader
        inputs:
          - { server: .service.master.any, recordcount: "100000", offset: "0" }
          - { server: .service.master.any, recordcount: "100000", offset: "100000" }
          - { server: .service.master.any, recordcount: "100000", offset: "200000" }
          - { server: .service.master.any, recordcount: "100000", offset: "300000" }
          - { server: .service.master.any, recordcount: "100000", offset: "400000" }
          - { server: .service.master.any, recordcount: "100000", offset: "500000" }
          #- { server: .service.master.any, recordcount: "1000000", offset: "6000000" }
          #- { server: .service.master.any, recordcount: "1000000", offset: "7000000" }
          #- { server: .service.master.any, recordcount: "1000000", offset: "8000000" }
          #- { server: .service.master.any, recordcount: "1000000", offset: "9000000" }
          #- { server: .service.master.any, recordcount: "1000000", offset: "10000000" }


    # Wait for ingestion to complete, and start querying clients, with different workloads
    - action: Cluster
      name: "runnersFix"
      depends: { running: [ master ], success: [ loaders ] }
      cluster:
        instances: 5
        templateRef: ycsb-tikv/runner
        inputs:
          - { server: .service.master.any, workload: workloada, operationcount: "1000000" }
        schedule:
          cron: "@every 30s"

    # Wait for ingestion to complete, and start querying clients, with different workloads
    - action: Cluster
      name: "runnersDyn"
      depends: { running: [ master, runnersFix ] }
      cluster:
        templateRef: ycsb-tikv/runner
        inputs:
          - { server: .service.master.any, workload: workloada, operationcount: "1000000" }
          - { server: .service.master.any, workload: workloadb, operationcount: "1000000" }
          - { server: .service.master.any, workload: workloadc, operationcount: "1000000" }
          - { server: .service.master.any, workload: workloadd, operationcount: "1000000" }
          - { server: .service.master.any, workload: workloada, operationcount: "1000000" }
          - { server: .service.master.any, workload: workloada, operationcount: "1000000" }
          - { server: .service.master.any, workload: workloadb, operationcount: "1000000" }
        schedule:
          cron: "@every 30s"