apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: ycsb-redis
spec:
  entries:
    # Loader injecting keys into a single server
    "loader":
      inputs:
        parameters:
          server: localhost
          port: "6379"
          mode: "single"
          offset: "0"
          recordcount: "1000000"
      spec: |
        agents:
          telemetry: [ sysmon/container, ycsbmon/client ]
        container:
          name: app
          image: aylei/go-ycsb:20201029
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              addr={{.Inputs.Parameters.server}}:{{.Inputs.Parameters.port}}
              mode={{.Inputs.Parameters.mode}}
              recordcount={{.Inputs.Parameters.recordcount}}
              offset={{.Inputs.Parameters.offset}}

              echo "Loader: ${mode}://${addr} <- ${recordcount}:${offset}"

              ./go-ycsb load redis                                \
                  -p recordcount=${recordcount}                   \
                  -p insertstart=${offset}                        \
                  -p threadcount=1                                \
                  -p redis.mode="${mode}"                         \
                  -p redis.addr="${addr}"                         \
              >> /dev/shm/pipe


    # Run queries against a single server
    "runner":
      inputs:
        parameters:
          server: localhost
          port: "6379"
          mode: "single"
          workload: "workloada"
          operationcount: "5000000"
      spec: |
        agents:
          telemetry: [ sysmon/container, ycsbmon/client ]
        container:
          name: app
          image: aylei/go-ycsb:20201029
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              addr={{.Inputs.Parameters.server}}:{{.Inputs.Parameters.port}}
              mode={{.Inputs.Parameters.mode}}
              workload={{.Inputs.Parameters.workload}}
              operationcount={{.Inputs.Parameters.operationcount}}

              echo "Runner: ${mode}://${addr} <- ${workload}:${operationcount}"

              ./go-ycsb run redis                                 \
                    -P workloads/${workload}                      \
                    -p operationcount=${operationcount}           \
                    -p threadcount=1                              \
                    -p redis.mode=${mode}                         \
                    -p redis.addr="$addr"                         \
              >> /dev/shm/pipe