apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: redis
spec:
  services:
    # Master node servicing requests
    "master":
      spec: |
        monitorTemplateRef: [ sysmon/container, redismon/telegraf ]
        container:
          name: app
          image: redis
          ports:
            - name: to-clients
              containerPort: 6379
            - name: clusterbus
              containerPort: 16379
            - name: sentinel
              containerPort: 26379
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              cat > redis.conf <<EOF
                port 6379
                appendonly yes
              EOF

              redis-server redis.conf


    # Replica of a master
    "slave":
      inputs:
        parameters:
          master: localhost
      spec: |
        monitorTemplateRef: [ sysmon/container, redismon/telegraf ]
        container:
          name: app
          image: redis
          ports:
            - name: to-clients
              containerPort: 6379
            - name: clusterbus
              containerPort: 16379
            - name: sentinel
              containerPort: 26379
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              cat > redis.conf <<EOF
                port 6379
                appendonly yes
                slaveof {{.Inputs.Parameters.master}} 6379
              EOF

              redis-server redis.conf


    # Failover agent
    "sentinel":
      inputs:
        parameters:
          master: localhost
      spec: |
        container:
          name: app
          image: redis
          ports:
            - name: sentinel
              containerPort: 26379
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              echo "Watch {{.Inputs.Parameters.master}}:6379"

              cat > sentinel.conf <<EOF
                sentinel resolve-hostnames yes
                sentinel monitor mymaster {{.Inputs.Parameters.master}} 6379 1
                sentinel down-after-milliseconds mymaster 5000
                sentinel failover-timeout mymaster 10000
                sentinel parallel-syncs mymaster 1
              EOF

              redis-sentinel sentinel.conf


    # Loader injecting keys into a single server
    "loader":
      inputs:
        parameters:
          server: localhost
          port: "6379"
          offset: "0"
          recordcount: "100000"
      spec: |
        monitorTemplateRef: [ sysmon/container, ycsbmon/goycsb ]
        container:
          name: app
          image: aylei/go-ycsb:20201029
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              echo Loader: insert {{.Inputs.Parameters.recordcount}} keys into \
                "{{.Inputs.Parameters.server}}:{{.Inputs.Parameters.port}}" @  {{.Inputs.Parameters.offset}}

              ./go-ycsb load redis                                                              \
                  -p recordcount={{.Inputs.Parameters.recordcount}}                             \
                  -p insertstart={{.Inputs.Parameters.offset}}                                  \
                  -p threadcount=1                                                              \
                  -p redis.mode="single"                                                        \
                  -p redis.addr="{{.Inputs.Parameters.server}}:{{.Inputs.Parameters.port}}"     \
              >> /dev/shm/pipe



    # Run queries against a single server
    "runner":
      inputs:
        parameters:
          server: localhost
          port: "6379"
          workload: "workloada"
          operationcount: "100000"
      spec: |
        monitorTemplateRef: [ sysmon/container, ycsbmon/goycsb ]
        container:
          name: app
          image: aylei/go-ycsb:20201029
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              echo Runner: {{.Inputs.Parameters.workflow}} with {{.Inputs.Parameters.operationcount}} to \
                "{{.Inputs.Parameters.server}}:{{.Inputs.Parameters.port}}"

              ./go-ycsb run redis                                                                   \
                    -P workloads/{{.Inputs.Parameters.workload}}                                    \
                    -p operationcount={{.Inputs.Parameters.operationcount}}                         \
                    -p threadcount=1                                                                \
                    -p redis.mode="single"                                                         \
                    -p redis.addr="{{.Inputs.Parameters.server}}:{{.Inputs.Parameters.port}}"       \
              >> /dev/shm/pipe