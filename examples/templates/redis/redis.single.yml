apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: redis
spec:
  services:
    # Master node servicing requests
    "master":
      monitorTemplateRef: [sysmon/container, redismon/telegraf]
      container:
          name:  app
          image: redis
          ports:
            - name: to-clients
              containerPort: 6379
            - name: clusterbus
              containerPort: 16379
            - name: sentinel
              containerPort: 26379
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              cat > redis.conf <<EOF
                port 6379
                appendonly yes
              EOF

              redis-server redis.conf


    # Replica of a master
    "slave":
      monitorTemplateRef: [sysmon/container, redismon/telegraf]
      container:
          name:  app
          image: redis
          ports:
            - name: to-clients
              containerPort: 6379
            - name: clusterbus
              containerPort: 16379
            - name: sentinel
              containerPort: 26379
          env:
            - name: master
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              cat > redis.conf <<EOF
                port 6379
                appendonly yes
                slaveof ${master} 6379
              EOF

              redis-server redis.conf


    # Failover agent
    "sentinel":
      monitorTemplateRef: [ sysmon/container, redismon/telegraf ]
      container:
          name:  app
          image: redis
          ports:
            - name: sentinel
              containerPort: 26379
          env:
            - name: master
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              echo "Watch $master"

              cat > sentinel.conf <<EOF
                sentinel resolve-hostnames yes
                sentinel monitor mymaster ${master} 6379 1
                sentinel down-after-milliseconds mymaster 5000
                sentinel failover-timeout mymaster 10000
                sentinel parallel-syncs mymaster 1
              EOF

              redis-sentinel sentinel.conf



    # Loader injecting keys into a single server
    "loader":
      container:
          name:  app
          image: aylei/go-ycsb:20201029
          env:
            - name: server
            - name: offset
            - name: recordcount
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              echo Loader: insert $recordcount keys into $server @ "$offset"
              ./go-ycsb load redis                                            \
                  -p recordcount=$recordcount                                 \
                  -p insertstart="$offset"                                    \
                  -p threadcount=32                                           \
                  -p redis.mode="single"                                      \
                  -p redis.addr="$server:6379"                                \
              >> /dev/shm/pipe



    # Run queries against a single server
    "runner":
      container:
          name: app
          image: aylei/go-ycsb:20201029
          env:
            - name: server
            - name: workload
            - name: operationcount
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              echo Runner: run $workload to $server
              ./go-ycsb run redis                                 \
                    -P workloads/$workload                        \
                    -p operationcount=$operationcount             \
                    -p threadcount=32                             \
                    -p redis.mode="single"                        \
                    -p redis.addr="server:6379"                   \
              >> /dev/shm/pipe
