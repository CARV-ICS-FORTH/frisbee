---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: frisbee.apps.tikv.pd.telemetry
spec:
  service:
    decorators:
      annotations: # Declare the container explicitly as sidecar.
        "sidecar.frisbee.dev/telemetry": telegraf

    containers:
      - name: telegraf
        image: telegraf:1.20.3
        ports:
          - name: tel-pd
            containerPort: 9443
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eum

            # Read metrics from one or many prometheus clients.
            cat > /tmp/prometheus.conf <<EOF
            [[inputs.prometheus]]
               ## An array of urls to scrape metrics from.
               urls = [
                  "http://localhost:2379/metrics"
               ]
               metric_version = 2

            [[outputs.prometheus_client]]
               listen = ":9443"
               metric_version = 2
               export_timestamp = true
               collectors_exclude = ["gocollector","process"]
            EOF

            telegraf --config /tmp/prometheus.conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frisbee.apps.tikv.pd.telemetry.config
data:
{{(.Files.Glob "dashboards/tikv-pd.json").AsConfig | nindent 2}}


---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: frisbee.apps.tikv.worker.telemetry
spec:
  service:
    decorators:
      annotations: # Declare the container explicitly as sidecar.
        "sidecar.frisbee.dev/telemetry": telegraf

    containers:
      - name: telegraf
        image: telegraf:1.20.3
        ports:
          - name: tel-pd
            containerPort: 9443
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eum

            # Read metrics from one or many prometheus clients.
            cat > /tmp/prometheus.conf <<EOF
            [[inputs.prometheus]]
               ## An array of urls to scrape metrics from.
               urls = [
                  "http://localhost:20180/metrics"
               ]

               metric_version = 2

            [[outputs.prometheus_client]]
               listen = ":9443"
               metric_version = 2
               export_timestamp = true
               collectors_exclude = ["gocollector","process"]
            EOF

            telegraf --config /tmp/prometheus.conf


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frisbee.apps.tikv.worker.telemetry.config
data:
{{(.Files.Glob "dashboards/tikv-summary.json").AsConfig | nindent 2}}
{{(.Files.Glob "dashboards/tikv-troubleshooting.json").AsConfig | nindent 2}}