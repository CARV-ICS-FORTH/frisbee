---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: time-driven-delay
spec:
  actions:
    # Create an iperf server
    - action: Service
      name: server
      service:
        templateRef: frisbee.apps.iperf2.server

    # Create an iperf client
    - action: Service
      name: client
      depends: { running: [ server ] }
      service:
        templateRef: frisbee.apps.iperf2.client
        inputs:
          - { server: server, seconds: "800" }

    # After a while, inject a network failure
    - action: Chaos
      name: partition0
      depends: { running: [ server ], after: "3m" }
      chaos:
        templateRef: frisbee.system.chaos.network.delay
        inputs:
          - { source: server, duration: "2m" }

    - action: Delete
      name: teardown
      depends: { running: [ server ], success: [ partition0, client ] }
      delete:
        jobs: [ server ]