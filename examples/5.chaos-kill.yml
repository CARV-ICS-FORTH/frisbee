---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: chaos-kill
spec:
  actions:
    # Step 0. Create individual cockroach servers
    - action: Cluster
      name: masters
      cluster:
        templateRef: cockroach.cluster.master
        instances: 3
        inputs:
          - { join: "masters-0:26257,masters-1:26257,masters-2:26257" }


    # Step 1. Create a cockroach cluster from the individual servers
    - action: Call
      name: boot
      depends: { running: [ masters ] }
      call:
        callable: boot
        services: [ masters-0 ]


    # Step 2. Hammer the server with requests
    - action: Service
      depends: { success: [ boot ] }
      name: loader
      service:
        templateRef: ycsb.cockroach.loader
        inputs:
          - { server: .cluster.masters.one , workload: workloada, recordcount: "100000000", threads: "4", delay: "15" }


    # Add new servers
    - action: Cluster
      name: more-servers
      depends: { running: [ loader ] }
      cluster:
        templateRef: cockroach.cluster.master
        instances: 10
        inputs:
          - { join: "masters-0:26257" }
        tolerate: # Without this field, the cluster will fail immediately after the killing
          failedServices: 3


    # When all servers are up and running, kill some of them periodically
    - action: Cascade
      name: killer
      depends: { running: [ more-servers ] }
      cascade:
        templateRef: system.chaos.pod.kill
        inputs:
          - { target: more-servers-4 }
          - { target: more-servers-7 }
          - { target: more-servers-3 }
        schedule:
          cron: "@every 1m"
