---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: cockroach-bitrot
spec:
  actions:
    # Step 0. provision 3 individual servers
    - action: Cluster
      name: masters
      cluster:
        templateRef: cockroach.cluster.master
        instances: 3
        inputs:
          - { join: "masters-1:26257,masters-2:26257,masters-3:26257" }

    # Step 1. Create a cockroach cluster from the individual servers
    - action: Call
      name: boot
      depends: { running: [ masters ] }
      call:
        callable: boot
        services: [ masters-1 ]
        expect:
          - { stdout: "Cluster successfully initialized.*" }

    # Step 2. import data to the workload node (node 1)
    - action: Service
      depends: { success: [ boot ] }
      name: import-workload
      service:
        templateRef: ycsb.cockroach.loader
        inputs:
          - { server: masters-1, workload: workloada, recordcount: "100000", threads: "16", delay: "15" }

    # Step 3. corrupt 6 random SST files on each node (abort if node has fewer)
    - action: Call
      name: bitrot
      depends: { success: [ import-workload ] }
      call:
        callable: bitrot
        services: [ masters-1 ]

    # Step 4. run workload for up-to 10 mins (node1)
    - action: Service
      depends: { success: [ bitrot ] }
      name: run-workload
      service:
        templateRef: ycsb.cockroach.runner
        inputs:
          - { server: masters-1, workload: workloada, operationcount: "10000000", threads: "4" }

    # Teardown
    - action: Delete
      name: teardown
      depends: { running: [ masters ], success: [ run-workload ] }
      delete:
        jobs: [ masters ]
