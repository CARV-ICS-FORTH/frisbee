---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: iperf.server
spec:
  service:
    containers:
      - name: app
        image: czero/iperf2
        ports:
          - name: listen
            containerPort: 5001
        resources:
          limits:
            cpu: "0.2"
            memory: "500Mi"
        command: [ iperf ]
        args: [ "-s", "-f", "m", "-i", "5" ]


---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: iperf.client
spec:
  inputs:
    parameters:
      target: localhost
      duration: "60"
  service:
    containers:
      - name: app
        image: czero/iperf2
        command: [ iperf ]
        args: [ "-c", "{{.inputs.parameters.target}}", "-t", "{{.inputs.parameters.duration}}" ]


---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: clustering
spec:
  actions:
    # Create an iperf server
    - action: Service
      name: server
      service:
        templateRef: iperf.server

    # Create a set of iperf clients
    - action: Cluster
      name: clients
      depends: { running: [ server ] }
      cluster:
        templateRef: iperf.client
        inputs:
          # Iterate over the inputs to create parameterized services.
          # Because the templates always expect `strings`, the duration
          # should be put in double quotes. Otherwise, you will a json error.
          - { target: server, duration: "10" }
          - { target: server, duration: "20" }
          - { target: server, duration: "30" }


    # When all actions are done, delete looping servers to gracefully exit the experiment
    - action: Delete
      name: teardown
      depends: { running: [ server ], success: [ clients ] }
      delete:
        jobs: [ server ]