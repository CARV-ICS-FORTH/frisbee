---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: redis-example
spec:
  services:
    "server":
      image: redis
      ports:
        - port: 6379
          name: to-clients
      command:
        - /bin/sh   # Run shell
        - -c        # Read from string
        - |         # Multi-line str
          set -eum
          trap "touch /dev/shm/stop" EXIT

          redis-server  --port 6379 --appendonly yes

    "loader":
      image: aylei/go-ycsb:20201029
      env:
        - name: host
        - name: offset
      command:
        - /bin/sh   # Run shell
        - -c        # Read from string
        - |         # Multi-line str
          set -eum
          trap "touch /dev/shm/stop" EXIT

          echo Loader: insert keys into $host @ "$offset"
          ./go-ycsb load redis                                    \
                  -p recordcount=10000                            \
                  -p insertstart="$offset"                        \
                  -p threadcount=32                               \
                  -p redis.mode="single"                          \
                  -p redis.addr="$host:6379"                      \
          >> /dev/shm/pipe

    "runner":
      image: aylei/go-ycsb:20201029
      env:
        - name: host
        - name: workload
      command:
        - /bin/sh   # Run shell
        - -c        # Read from string
        - |         # Multi-line str
          set -eum
          trap "touch /dev/shm/stop" EXIT

          echo Runner: run $workload to $host
          ./go-ycsb run redis                         \
                    -P workloads/$workload            \
                    -p operationcount=100000        \
                    -p threadcount=32                 \
                    -p redis.mode="single"            \
                    -p redis.addr="$host:6379"        \
          >> /dev/shm/pipe

---
apiVersion: frisbee.io/v1alpha1
kind: Workflow
metadata:
  name: redis-experiment
spec:
  actions:
    - actiontype: CreateGroup
      name: masters
      createServiceGroup:
        templateRef: redis-example/server
        instances: 3

    - actiontype: CreateGroup
      name: loaders
      depends: { running: [ masters ] }
      createServiceGroup:
        templateRef: redis-example/loader
        inputs:
          - { host: .servicegroup.masters.one, offset: "0" }
          - { host: .servicegroup.masters.one, offset: "10000" }
          - { host: .servicegroup.masters.one, offset: "20000" }
          - { host: .servicegroup.masters.one, offset: "30000" }
          - { host: .servicegroup.masters.one, offset: "40000" }
          - { host: .servicegroup.masters.one, offset: "50000" }
          - { host: .servicegroup.masters.one, offset: "60000" }
          - { host: .servicegroup.masters.one, offset: "70000" }
          - { host: .servicegroup.masters.one, offset: "80000" }
          - { host: .servicegroup.masters.one, offset: "90000" }

    - actiontype: CreateGroup
      name: runners
      depends: { running: [ masters ], complete: [ loaders ] }
      createServiceGroup:
        templateRef: redis-example/runner
        instances: 3
        env:
          host: .servicegroup.masters.one
          workload: workloada

    - actiontype: Wait
      name: "teardown"
      wait:
        complete: [runners]