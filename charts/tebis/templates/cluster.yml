---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: tebis.cluster.zookeeper
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  service:
    containers:
      - name: app
        image: zookeeper:3.5.9
        ports:
          - name: http
            containerPort: 2181
        command:
          - /bin/sh   # Run shell
          - -c        # Read from string
          - |         # Multi-line str
            set -eum

            echo "Initiate Zookeeper at 0.0.0.0:2181"
            /docker-entrypoint.sh zkServer.sh start-foreground


---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: tebis.cluster.bootstrap
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  inputs:
    parameters:
      zookeeper: localhost
      serverHost: "localhost"
      serverPort: "6060"
  service:
    containers:
      - name: app
        image: icsforth/tebis-manager:latest
        command:
          - /bin/sh   # Run shell
          - -c        # Read from string
          - |         # Multi-line str
            set -eum

            echo "Create hosts file"
            cat > hosts <<EOF
              master0-6060 leader
              master1-6061
              master2-6062
            EOF

            echo "Create regions file"
            cat > regions <<EOF
              0 AA AB master0-6060
              1 AB AC master1-6061
              2 AC +oo master2-6062
            EOF

            zookeeper={{"{{.Inputs.Parameters.zookeeper}}:2181"}}

            sleep 10

            echo "Contact Zookeeper at ${zookeeper}"
            python /tebis_zk_init.py hosts regions ${zookeeper}

            echo "Regions have been successfully created"


---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: tebis.cluster.master
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  inputs:
    parameters:
      zookeeper: localhost
      device: "/tmp/tebis.dat"
      port: "6060"
  service:
    decorators:
      annotations:
        k8s.v1.cni.cncf.io/networks: macvlan-rdma
      telemetry: [ platform.telemetry.container ]
      setFields:
        - field: Containers.0.Ports.0.ContainerPort
          value: {{"{{.Inputs.Parameters.port | int}}" | quote}}
    containers:
      - name: app
        image: icsforth/tebis-node:latest
        ports:
          - name: to-clients
            containerPort: 0 # Will be populated by set field
        securityContext:
          privileged: true
        command:
          - /bin/sh   # Run shell
          - -c        # Read from string
          - |         # Multi-line str
            set -eum
            trap "touch /dev/shm/stop" EXIT

            device={{"{{.Inputs.Parameters.device}}"}}
            zookeeper={{"{{.Inputs.Parameters.zookeeper}}:2181"}}
            port={{"{{.Inputs.Parameters.port}}"}}
            cores="0,1,2"

            rdma=$(hostname -I | awk '{print $2}')

            echo "Pre-allocate space for Tebis server"
            fallocate --length 16G ${device}

            echo "Starting Tebis server"
            echo /kreon-server/kreon_server ${device} ${device} ${zookeeper} ${rdma} ${port},${cores}
            /kreon-server/kreon_server ${device} ${device} ${zookeeper} ${rdma} ${port},${cores}


---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: tebis.cluster.client
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  inputs:
    parameters:
      zookeeper: localhost
      plan: "./ycsb_execution_plans/execution_plan_la.txt"
      threads: "4"
      regions: "1"
  service:
    decorators:
      annotations:
        k8s.v1.cni.cncf.io/networks: macvlan-rdma
      telemetry: [ platform.telemetry.container ]
    containers:
      - name: app
        image: icsforth/tebis-client:latest
        securityContext:
          privileged: true
        command:
          - /bin/sh   # Run shell
          - -c        # Read from string
          - |         # Multi-line str
            set -eum
            trap "touch /dev/shm/stop" EXIT

            echo "Starting Tebis client"

            echo /ycsb-async-kreon                                 \
            -e {{"{{.Inputs.Parameters.plan}}"}}              \
            -threads {{"{{.Inputs.Parameters.threads}}"}}     \
            -dbnum 1                                          \
            -w sd                                             \
            -r {{"{{.Inputs.Parameters.regions}}"}}           \
            -zk_host  {{"{{.Inputs.Parameters.zookeeper}}"}}  \
            -zk_port  2181


            sleep 3660