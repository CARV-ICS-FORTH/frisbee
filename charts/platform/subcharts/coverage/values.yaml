---
sonarqube:
  enabled: false

  # Ignore  deployment taints, if any.
#  tolerations:
#    - key: "sonarqube"
#      operator: "Equal"
#      value: "true"
#      effect: "NoSchedule"


  #nodeSelector:
  #  sonarqube: "true"

  # SonarQube comes with a bundled Elasticsearch and, as Elasticsearch is stateful, so is SonarQube.
  # There is an option to persist the Elasticsearch indexes in a Persistent Volume, but with regular
  # killing operations by the Kubernetes Cluster, these indexes can be corrupted.
  # By default, persistency is disabled in the Helm chart.
#  persistence:
#    enabled: false

  # make the SonarQube service accessible from outside of your cluster,
#  ingress:
#    enabled: true
    # Used to create an Ingress record.
#    hosts:
#      - name: sonarqube.{{.Values.global.ingress}}
        # Different clouds or configurations might need /* as the default path
#        path: /
        # For additional control over serviceName and servicePort
#        serviceName: sonarqube
#        servicePort: 9000
#    annotations:
#      kubernetes.io/ingress.class: nginx
#      nginx.ingress.kubernetes.io/proxy-body-size: "8m"



  # Currently, no cloud-native monitoring solutions play nicely with SonarQube or are supported by SonarSource.
  # It is, however, possible to expose at least the JMX metrics to Prometheus with the help of the Prometheus
  # JMX exporter for the Application Nodes.
  # If enabled, it downloads the Prometheus JMX exporter agent and adds it to the startup options of SonarQube.
#  prometheusExporter:
#    enabled: false
#    config:
#      rules:
#        - pattern: ".*"