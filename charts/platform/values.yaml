## @section Global parameters
## Global Frisbee Platform parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
##
## @param global.ingress DNS name for making Telemetry stack accessible outside the cluster.
global:
  domainName: localhost

## @section Frisbee Operator parameters

## @param operator.enabled Set it to false for running the controller outside the Kubernetes Cluster
operator:
  enabled: true


## @section Frisbee Telemetry parameters

## @param telemetry.honorTimestamp Use the timestamps of the metrics exposed by the agent (time-drifts)
## @param telemetry.prometheusPort Listening port for Prometheus
## @param telemetry.grafanaPort Listening port for Grafana
## @param telemetry.ingressClass Type of ingres for making Telemetry stack accessible outside the cluster.
telemetry:
  honorTimestamp: true
  prometheusPort: 9090
  grafanaPort: 3000

  ingressClass: public

## @section Provision of dynamic volumes

## @param openebs.enabled Whether to enable OpenEBS
## @param openebs.storagePath The filesystem dir where volumes will be provisioned
## @param openebs.ndm.enabled Whether to enable block devices as resources
## @param openebs.ndmOperator.enabled Whether to automatically provision block devices
openebs:
  enabled: true

  backendDir: /mnt/local

  nfs-provisioner:
    enabled: true

  # NDM stands for Node device Manager as it manages the devices attached to the nodes.
  # This is achieved with the help of /run/udev directory which gets mounted inside the pod.
  ndm:
    filters:
      # use the specified block devices for creating the block device custom resource.
      includePaths: "" # example /dev/loop7

      excludePaths: "/dev/fd0,/dev/sr0,/dev/ram,/dev/dm-,/dev/md,/dev/rbd,/dev/zd"


## @section Chaos Injection Parameters

## @param chaos.enabled Whether or not to enable the Chaos controllers
chaos:
  enabled: true

chaos-mesh:
  controllerManager:
    replicaCount: 1

  # If you are using Kind or using containerd as CRI, you can use the
  # config below to use containerd as the runtime in chaos-daemon.
  chaosDaemon:
    runtime: containerd
    socketPath: /var/snap/microk8s/common/run/containerd.sock


## @section General purpose, web-based UI for Kubernetes clusters

## @param dashboard.enabled Whether or not to enable Dashboard
dashboard:
  enabled: true