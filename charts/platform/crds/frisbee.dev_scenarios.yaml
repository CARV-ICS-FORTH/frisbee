---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: scenarios.frisbee.dev
spec:
  group: frisbee.dev
  names:
    kind: Scenario
    listKind: ScenarioList
    plural: scenarios
    singular: scenario
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Scenario is the Schema for the Scenarios API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ScenarioSpec defines the desired state of Scenario.
            properties:
              actions:
                description: Actions are the tasks that will be taken.
                items:
                  description: Action is a step in a workflow that defines a particular
                    part of a testing process.
                  properties:
                    action:
                      description: ActionType refers to a category of actions that
                        can be associated with a specific controller.
                      enum:
                      - Service
                      - Cluster
                      - Chaos
                      - Cascade
                      - Delete
                      - Call
                      type: string
                    assert:
                      description: Assert defines the conditions that must be maintained
                        after the action has been started. If the evaluation of the
                        condition is false, the Scenario will abort immediately.
                      properties:
                        metrics:
                          description: 'Metrics set a Grafana alert that will be triggered
                            once the condition is met. Parsing: Grafana URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                            metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                          nullable: true
                          type: string
                        state:
                          description: State describe the runtime condition that should
                            be met after the action has been executed Shall be defined
                            using .Lifecycle() methods. The methods account only jobs
                            that are managed by the object.
                          nullable: true
                          type: string
                      type: object
                    call:
                      description: CallSpec defines the desired state of Call.
                      properties:
                        callable:
                          description: Callable is the name of the endpoint that will
                            be called
                          type: string
                        expect:
                          description: Expect declares a list of expected outputs.
                            The number of expected outputs must be the same as the
                            number of defined services.
                          items:
                            description: MatchOutputs defined a set of remote command
                              outputs that must be matched. The limit for both Stdout
                              and Stderr is 1024 characters.
                            properties:
                              stderr:
                                description: Stderr is a regex that describes the
                                  expected output from stderr. It cannot be longer
                                  than 1024 characters.
                                maxLength: 1024
                                type: string
                              stdout:
                                description: Stdout is a regex that describes the
                                  expected output from stdout. It cannot be longer
                                  than 1024 characters.
                                maxLength: 1024
                                type: string
                            type: object
                          type: array
                        schedule:
                          description: Schedule defines the interval between the invocations
                            of the callable.
                          properties:
                            cron:
                              description: "Cron defines a cron job rule. \n Some
                                rule examples: \"0 30 * * * *\" means to \"Every hour
                                on the half hour\" \"@hourly\"      means to \"Every
                                hour\" \"@every 1h30m\" means to \"Every hour thirty\"
                                \n More rule info: https://godoc.org/github.com/robfig/cron"
                              type: string
                            event:
                              description: Event schedules a new every when an event
                                has happened.
                              properties:
                                metrics:
                                  description: 'Metrics set a Grafana alert that will
                                    be triggered once the condition is met. Parsing:
                                    Grafana URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                    metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                                  nullable: true
                                  type: string
                                state:
                                  description: State describe the runtime condition
                                    that should be met after the action has been executed
                                    Shall be defined using .Lifecycle() methods. The
                                    methods account only jobs that are managed by
                                    the object.
                                  nullable: true
                                  type: string
                              type: object
                            startingDeadlineSeconds:
                              description: StartingDeadlineSeconds is an optional
                                deadline in seconds for starting the job if it misses
                                scheduled time for any reason. if we miss this deadline,
                                we'll just wait till the next scheduled time
                              format: int64
                              type: integer
                            timeline:
                              description: Timeline creates a timeline that honors
                                the underlying distribution.
                              properties:
                                constant:
                                  description: DistParamsConstant are parameters for
                                    the constant distribution.
                                  properties:
                                    value:
                                      format: int64
                                      type: integer
                                  required:
                                  - value
                                  type: object
                                distribution:
                                  enum:
                                  - constant
                                  - uniform
                                  - zipfian
                                  - histogram
                                  type: string
                                histogram:
                                  description: DistParamsHistogram are parameters
                                    for the constant distribution.
                                  properties:
                                    blockSize:
                                      format: int64
                                      type: integer
                                    buckets:
                                      items:
                                        format: int64
                                        type: integer
                                      type: array
                                  required:
                                  - blockSize
                                  - buckets
                                  type: object
                                total:
                                  description: TotalDuration defines the total duration
                                    within which events will happen.
                                  type: string
                                uniform:
                                  description: DistParamsUniform are parameters for
                                    the constant distribution.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                  required:
                                  - max
                                  type: object
                                zipfian:
                                  description: DistParamsZipfian are parameters for
                                    the constant distribution.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                  required:
                                  - max
                                  type: object
                              required:
                              - distribution
                              - total
                              type: object
                          type: object
                        services:
                          description: Services is a list of services that will be
                            stopped.
                          items:
                            type: string
                          type: array
                        suspend:
                          description: Suspend flag tells the controller to suspend
                            subsequent executions, it does not apply to already started
                            executions.  Defaults to false.
                          type: boolean
                        tolerate:
                          description: Tolerate specifies the conditions under which
                            the call will fail. If undefined, the call fails immediately
                            when a call to service has failed.
                          properties:
                            failedJobs:
                              description: FailedJobs indicate the number of services
                                that may fail before the cluster fails itself.
                              minimum: 1
                              type: integer
                          type: object
                        until:
                          description: Until defines the conditions under which the
                            CR will stop spawning new jobs. If used in conjunction
                            with inputs, it will loop over inputs until the conditions
                            are met.
                          properties:
                            metrics:
                              description: 'Metrics set a Grafana alert that will
                                be triggered once the condition is met. Parsing: Grafana
                                URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                              nullable: true
                              type: string
                            state:
                              description: State describe the runtime condition that
                                should be met after the action has been executed Shall
                                be defined using .Lifecycle() methods. The methods
                                account only jobs that are managed by the object.
                              nullable: true
                              type: string
                          type: object
                      required:
                      - services
                      type: object
                    cascade:
                      description: CascadeSpec defines the desired state of Cascade.
                      properties:
                        inputs:
                          description: UserParameters is a map of parameters passed
                            to the objects. Event used in conjunction with instances,
                            if the number of instances is larger that the number of
                            inputs, then inputs are recursively iteration.
                          items:
                            additionalProperties:
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        instances:
                          description: MaxInstances dictate the number of objects
                            to be created for the CR. If no inputs are defined, then
                            all instances will be initiated using the default parameters
                            of the template. Event used in conjunction with Until,
                            MaxInstances as a max bound.
                          type: integer
                        schedule:
                          description: Schedule defines the interval between the creation
                            of services within the group.
                          properties:
                            cron:
                              description: "Cron defines a cron job rule. \n Some
                                rule examples: \"0 30 * * * *\" means to \"Every hour
                                on the half hour\" \"@hourly\"      means to \"Every
                                hour\" \"@every 1h30m\" means to \"Every hour thirty\"
                                \n More rule info: https://godoc.org/github.com/robfig/cron"
                              type: string
                            event:
                              description: Event schedules a new every when an event
                                has happened.
                              properties:
                                metrics:
                                  description: 'Metrics set a Grafana alert that will
                                    be triggered once the condition is met. Parsing:
                                    Grafana URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                    metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                                  nullable: true
                                  type: string
                                state:
                                  description: State describe the runtime condition
                                    that should be met after the action has been executed
                                    Shall be defined using .Lifecycle() methods. The
                                    methods account only jobs that are managed by
                                    the object.
                                  nullable: true
                                  type: string
                              type: object
                            startingDeadlineSeconds:
                              description: StartingDeadlineSeconds is an optional
                                deadline in seconds for starting the job if it misses
                                scheduled time for any reason. if we miss this deadline,
                                we'll just wait till the next scheduled time
                              format: int64
                              type: integer
                            timeline:
                              description: Timeline creates a timeline that honors
                                the underlying distribution.
                              properties:
                                constant:
                                  description: DistParamsConstant are parameters for
                                    the constant distribution.
                                  properties:
                                    value:
                                      format: int64
                                      type: integer
                                  required:
                                  - value
                                  type: object
                                distribution:
                                  enum:
                                  - constant
                                  - uniform
                                  - zipfian
                                  - histogram
                                  type: string
                                histogram:
                                  description: DistParamsHistogram are parameters
                                    for the constant distribution.
                                  properties:
                                    blockSize:
                                      format: int64
                                      type: integer
                                    buckets:
                                      items:
                                        format: int64
                                        type: integer
                                      type: array
                                  required:
                                  - blockSize
                                  - buckets
                                  type: object
                                total:
                                  description: TotalDuration defines the total duration
                                    within which events will happen.
                                  type: string
                                uniform:
                                  description: DistParamsUniform are parameters for
                                    the constant distribution.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                  required:
                                  - max
                                  type: object
                                zipfian:
                                  description: DistParamsZipfian are parameters for
                                    the constant distribution.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                  required:
                                  - max
                                  type: object
                              required:
                              - distribution
                              - total
                              type: object
                          type: object
                        suspend:
                          description: Suspend flag tells the controller to suspend
                            subsequent executions, it does not apply to already started
                            executions.  Defaults to false.
                          type: boolean
                        templateRef:
                          description: TemplateRef refers to a  template (e.g, iperf-server).
                          type: string
                        until:
                          description: Until defines the conditions under which the
                            CR will stop spawning new jobs. If used in conjunction
                            with inputs, it will loop over inputs until the conditions
                            are met.
                          properties:
                            metrics:
                              description: 'Metrics set a Grafana alert that will
                                be triggered once the condition is met. Parsing: Grafana
                                URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                              nullable: true
                              type: string
                            state:
                              description: State describe the runtime condition that
                                should be met after the action has been executed Shall
                                be defined using .Lifecycle() methods. The methods
                                account only jobs that are managed by the object.
                              nullable: true
                              type: string
                          type: object
                      required:
                      - templateRef
                      type: object
                    chaos:
                      description: GenerateObjectFromTemplate generates a spec by
                        parameterizing the templateRef with the given inputs.
                      properties:
                        inputs:
                          description: UserParameters is a map of parameters passed
                            to the objects. Event used in conjunction with instances,
                            if the number of instances is larger that the number of
                            inputs, then inputs are recursively iteration.
                          items:
                            additionalProperties:
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        instances:
                          description: MaxInstances dictate the number of objects
                            to be created for the CR. If no inputs are defined, then
                            all instances will be initiated using the default parameters
                            of the template. Event used in conjunction with Until,
                            MaxInstances as a max bound.
                          type: integer
                        templateRef:
                          description: TemplateRef refers to a  template (e.g, iperf-server).
                          type: string
                        until:
                          description: Until defines the conditions under which the
                            CR will stop spawning new jobs. If used in conjunction
                            with inputs, it will loop over inputs until the conditions
                            are met.
                          properties:
                            metrics:
                              description: 'Metrics set a Grafana alert that will
                                be triggered once the condition is met. Parsing: Grafana
                                URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                              nullable: true
                              type: string
                            state:
                              description: State describe the runtime condition that
                                should be met after the action has been executed Shall
                                be defined using .Lifecycle() methods. The methods
                                account only jobs that are managed by the object.
                              nullable: true
                              type: string
                          type: object
                      required:
                      - templateRef
                      type: object
                    cluster:
                      description: ClusterSpec defines the desired state of Cluster.
                      properties:
                        inputs:
                          description: UserParameters is a map of parameters passed
                            to the objects. Event used in conjunction with instances,
                            if the number of instances is larger that the number of
                            inputs, then inputs are recursively iteration.
                          items:
                            additionalProperties:
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        instances:
                          description: MaxInstances dictate the number of objects
                            to be created for the CR. If no inputs are defined, then
                            all instances will be initiated using the default parameters
                            of the template. Event used in conjunction with Until,
                            MaxInstances as a max bound.
                          type: integer
                        placement:
                          description: Placement defines rules for placing the containers
                            across the available nodes.
                          properties:
                            collocate:
                              description: Collocate will place all the Services of
                                this Cluster within the same node.
                              type: boolean
                            conflictsWith:
                              description: ConflictsWith points to another Cluster
                                whose Services cannot be located with this one. For
                                example, this is needed for placing the master nodes
                                on a different failure domain than the slave nodes.
                              items:
                                type: string
                              type: array
                            nodes:
                              description: Nodes will place all the Services of this
                                Cluster within the specific set of nodes.
                              items:
                                type: string
                              type: array
                          type: object
                        resources:
                          description: Resources defines how a set of resources will
                            be distributed among the cluster's services.
                          properties:
                            constant:
                              description: DistParamsConstant are parameters for the
                                constant distribution.
                              properties:
                                value:
                                  format: int64
                                  type: integer
                              required:
                              - value
                              type: object
                            distribution:
                              enum:
                              - constant
                              - uniform
                              - zipfian
                              - histogram
                              type: string
                            histogram:
                              description: DistParamsHistogram are parameters for
                                the constant distribution.
                              properties:
                                blockSize:
                                  format: int64
                                  type: integer
                                buckets:
                                  items:
                                    format: int64
                                    type: integer
                                  type: array
                              required:
                              - blockSize
                              - buckets
                              type: object
                            total:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: TotalResources defines the total resources
                                that will be distributed among the cluster's services.
                              type: object
                            uniform:
                              description: DistParamsUniform are parameters for the
                                constant distribution.
                              properties:
                                max:
                                  format: int64
                                  type: integer
                              required:
                              - max
                              type: object
                            zipfian:
                              description: DistParamsZipfian are parameters for the
                                constant distribution.
                              properties:
                                max:
                                  format: int64
                                  type: integer
                              required:
                              - max
                              type: object
                          required:
                          - distribution
                          - total
                          type: object
                        schedule:
                          description: Schedule defines the interval between the creation
                            of services in the group.
                          properties:
                            cron:
                              description: "Cron defines a cron job rule. \n Some
                                rule examples: \"0 30 * * * *\" means to \"Every hour
                                on the half hour\" \"@hourly\"      means to \"Every
                                hour\" \"@every 1h30m\" means to \"Every hour thirty\"
                                \n More rule info: https://godoc.org/github.com/robfig/cron"
                              type: string
                            event:
                              description: Event schedules a new every when an event
                                has happened.
                              properties:
                                metrics:
                                  description: 'Metrics set a Grafana alert that will
                                    be triggered once the condition is met. Parsing:
                                    Grafana URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                    metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                                  nullable: true
                                  type: string
                                state:
                                  description: State describe the runtime condition
                                    that should be met after the action has been executed
                                    Shall be defined using .Lifecycle() methods. The
                                    methods account only jobs that are managed by
                                    the object.
                                  nullable: true
                                  type: string
                              type: object
                            startingDeadlineSeconds:
                              description: StartingDeadlineSeconds is an optional
                                deadline in seconds for starting the job if it misses
                                scheduled time for any reason. if we miss this deadline,
                                we'll just wait till the next scheduled time
                              format: int64
                              type: integer
                            timeline:
                              description: Timeline creates a timeline that honors
                                the underlying distribution.
                              properties:
                                constant:
                                  description: DistParamsConstant are parameters for
                                    the constant distribution.
                                  properties:
                                    value:
                                      format: int64
                                      type: integer
                                  required:
                                  - value
                                  type: object
                                distribution:
                                  enum:
                                  - constant
                                  - uniform
                                  - zipfian
                                  - histogram
                                  type: string
                                histogram:
                                  description: DistParamsHistogram are parameters
                                    for the constant distribution.
                                  properties:
                                    blockSize:
                                      format: int64
                                      type: integer
                                    buckets:
                                      items:
                                        format: int64
                                        type: integer
                                      type: array
                                  required:
                                  - blockSize
                                  - buckets
                                  type: object
                                total:
                                  description: TotalDuration defines the total duration
                                    within which events will happen.
                                  type: string
                                uniform:
                                  description: DistParamsUniform are parameters for
                                    the constant distribution.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                  required:
                                  - max
                                  type: object
                                zipfian:
                                  description: DistParamsZipfian are parameters for
                                    the constant distribution.
                                  properties:
                                    max:
                                      format: int64
                                      type: integer
                                  required:
                                  - max
                                  type: object
                              required:
                              - distribution
                              - total
                              type: object
                          type: object
                        suspend:
                          description: Suspend flag tells the controller to suspend
                            subsequent executions, it does not apply to already started
                            executions.  Defaults to false.
                          type: boolean
                        templateRef:
                          description: TemplateRef refers to a  template (e.g, iperf-server).
                          type: string
                        testData:
                          description: TestData defines a volume that will be mounted
                            across the Scenario's Services.
                          properties:
                            globalNamespace:
                              description: GlobalNamespace if disabled, all containers
                                see the name root directory. If enabled, each container
                                sees its own namespace.
                              type: boolean
                            volume:
                              description: PersistentVolumeClaimVolumeSource references
                                the user's PVC in the same namespace. This volume
                                finds the bound PV and mounts that volume for the
                                pod. A PersistentVolumeClaimVolumeSource is, essentially,
                                a wrapper around another type of volume that is owned
                                by someone else (the system).
                              properties:
                                claimName:
                                  description: 'claimName is the name of a PersistentVolumeClaim
                                    in the same namespace as the pod using this volume.
                                    More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                                  type: string
                                readOnly:
                                  description: readOnly Will force the ReadOnly setting
                                    in VolumeMounts. Default false.
                                  type: boolean
                              required:
                              - claimName
                              type: object
                          type: object
                        tolerate:
                          description: Tolerate specifies the conditions under which
                            the cluster will fail. If undefined, the cluster fails
                            immediately when a service has failed.
                          properties:
                            failedJobs:
                              description: FailedJobs indicate the number of services
                                that may fail before the cluster fails itself.
                              minimum: 1
                              type: integer
                          type: object
                        until:
                          description: Until defines the conditions under which the
                            CR will stop spawning new jobs. If used in conjunction
                            with inputs, it will loop over inputs until the conditions
                            are met.
                          properties:
                            metrics:
                              description: 'Metrics set a Grafana alert that will
                                be triggered once the condition is met. Parsing: Grafana
                                URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                              nullable: true
                              type: string
                            state:
                              description: State describe the runtime condition that
                                should be met after the action has been executed Shall
                                be defined using .Lifecycle() methods. The methods
                                account only jobs that are managed by the object.
                              nullable: true
                              type: string
                          type: object
                      required:
                      - templateRef
                      type: object
                    delete:
                      properties:
                        jobs:
                          description: Jobs is a list of jobs to be deleted. The format
                            is {"kind":"name"}, e.g, {"service","client"}
                          items:
                            type: string
                          type: array
                      required:
                      - jobs
                      type: object
                    depends:
                      description: DependsOn defines the conditions for the execution
                        of this action
                      properties:
                        after:
                          description: After is the time offset since the beginning
                            of this action.
                          type: string
                        running:
                          description: Running waits for the given groups to be running
                          items:
                            type: string
                          type: array
                        success:
                          description: Success waits for the given groups to be succeeded
                          items:
                            type: string
                          type: array
                      type: object
                    name:
                      description: Name is a unique identifier of the action
                      type: string
                    service:
                      description: GenerateObjectFromTemplate generates a spec by
                        parameterizing the templateRef with the given inputs.
                      properties:
                        inputs:
                          description: UserParameters is a map of parameters passed
                            to the objects. Event used in conjunction with instances,
                            if the number of instances is larger that the number of
                            inputs, then inputs are recursively iteration.
                          items:
                            additionalProperties:
                              x-kubernetes-preserve-unknown-fields: true
                            type: object
                          type: array
                        instances:
                          description: MaxInstances dictate the number of objects
                            to be created for the CR. If no inputs are defined, then
                            all instances will be initiated using the default parameters
                            of the template. Event used in conjunction with Until,
                            MaxInstances as a max bound.
                          type: integer
                        templateRef:
                          description: TemplateRef refers to a  template (e.g, iperf-server).
                          type: string
                        until:
                          description: Until defines the conditions under which the
                            CR will stop spawning new jobs. If used in conjunction
                            with inputs, it will loop over inputs until the conditions
                            are met.
                          properties:
                            metrics:
                              description: 'Metrics set a Grafana alert that will
                                be triggered once the condition is met. Parsing: Grafana
                                URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                                metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                              nullable: true
                              type: string
                            state:
                              description: State describe the runtime condition that
                                should be met after the action has been executed Shall
                                be defined using .Lifecycle() methods. The methods
                                account only jobs that are managed by the object.
                              nullable: true
                              type: string
                          type: object
                      required:
                      - templateRef
                      type: object
                  required:
                  - action
                  - name
                  type: object
                type: array
              suspend:
                description: Suspend flag tells the controller to suspend subsequent
                  executions, it does not apply to already started executions.  Defaults
                  to false.
                type: boolean
              testData:
                description: TestData defines a volume that will be mounted across
                  the Scenario's Services.
                properties:
                  globalNamespace:
                    description: GlobalNamespace if disabled, all containers see the
                      name root directory. If enabled, each container sees its own
                      namespace.
                    type: boolean
                  volume:
                    description: PersistentVolumeClaimVolumeSource references the
                      user's PVC in the same namespace. This volume finds the bound
                      PV and mounts that volume for the pod. A PersistentVolumeClaimVolumeSource
                      is, essentially, a wrapper around another type of volume that
                      is owned by someone else (the system).
                    properties:
                      claimName:
                        description: 'claimName is the name of a PersistentVolumeClaim
                          in the same namespace as the pod using this volume. More
                          info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims'
                        type: string
                      readOnly:
                        description: readOnly Will force the ReadOnly setting in VolumeMounts.
                          Default false.
                        type: boolean
                    required:
                    - claimName
                    type: object
                type: object
            required:
            - actions
            type: object
          status:
            description: ScenarioStatus defines the observed state of Scenario.
            properties:
              conditions:
                description: Conditions describe sequences of events that warrant
                  the present Phase.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dataviewerEndpoint:
                description: Dataviewer points to the local Dataviewer instance
                type: string
              grafanaEndpoint:
                description: GrafanaEndpoint points to the local Grafana instance
                type: string
              message:
                description: Message provides more details for understanding the Reason.
                type: string
              phase:
                description: Phase is a simple, high-level summary of where the Object
                  is in its lifecycle. The conditions array, the reason and message
                  fields, and the individual container status arrays contain more
                  detail about the pod's status.
                type: string
              prometheusEndpoint:
                description: PrometheusEndpoint points to the local Prometheus instance
                type: string
              reason:
                description: Reason is A brief CamelCase message indicating details
                  about why the service is in this Phase. e.g. 'Evicted'
                type: string
              scheduledJobs:
                description: ScheduledJobs is a list of references to the names of
                  executed actions.
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
