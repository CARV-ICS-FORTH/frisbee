---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: calls.frisbee.dev
spec:
  group: frisbee.dev
  names:
    kind: Call
    listKind: CallList
    plural: calls
    singular: call
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Call is the Schema for the Call API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CallSpec defines the desired state of Call.
            properties:
              callable:
                description: Callable is the name of the endpoint that will be called
                type: string
              expect:
                description: Expect declares a list of expected outputs. The number
                  of expected outputs must be the same as the number of defined services.
                items:
                  description: MatchOutputs defined a set of remote command outputs
                    that must be matched. The limit for both Stdout and Stderr is
                    1024 characters.
                  properties:
                    stderr:
                      description: Stderr is a regex that describes the expected output
                        from stderr. It cannot be longer than 1024 characters.
                      maxLength: 1024
                      type: string
                    stdout:
                      description: Stdout is a regex that describes the expected output
                        from stdout. It cannot be longer than 1024 characters.
                      maxLength: 1024
                      type: string
                  type: object
                type: array
              schedule:
                description: "Job Scheduling \n Schedule defines the interval between
                  the invocations of the callable."
                properties:
                  cron:
                    description: "Cron defines a cron job rule. \n Some rule examples:
                      \"0 30 * * * *\" means to \"Every hour on the half hour\" \"@hourly\"
                      \     means to \"Every hour\" \"@every 1h30m\" means to \"Every
                      hour thirty\" \n More rule info: https://godoc.org/github.com/robfig/cron"
                    type: string
                  event:
                    description: Event schedules new tasks in a non-deterministic
                      manner, based on system-driven events. Multiple tasks may run
                      concurrently.
                    properties:
                      metrics:
                        description: 'Metrics set a Grafana alert that will be triggered
                          once the condition is met. Parsing: Grafana URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                          metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                        nullable: true
                        type: string
                      state:
                        description: State describe the runtime condition that should
                          be met after the action has been executed Shall be defined
                          using .Lifecycle() methods. The methods account only jobs
                          that are managed by the object.
                        nullable: true
                        type: string
                    type: object
                  sequential:
                    description: Sequential schedules a new task once the previous
                      task is complete.
                    type: boolean
                  startingDeadlineSeconds:
                    description: StartingDeadlineSeconds is an optional deadline in
                      seconds for starting the job if it misses scheduled time for
                      any reason. if we miss this deadline, we'll just wait till the
                      next scheduled time
                    format: int64
                    type: integer
                  timeline:
                    description: Timeline schedules new tasks deterministically, based
                      on predefined times that honors the underlying distribution.
                      Multiple tasks may run concurrently.
                    properties:
                      distribution:
                        description: DistributionSpec defines how the TotalDuration
                          will be divided into time-based events.
                        properties:
                          histogram:
                            description: DistParamsPareto are parameters for the Pareto
                              distribution.
                            properties:
                              scale:
                                type: number
                              shape:
                                type: number
                            required:
                            - scale
                            - shape
                            type: object
                          name:
                            enum:
                            - constant
                            - uniform
                            - normal
                            - pareto
                            - default
                            type: string
                        required:
                        - name
                        type: object
                      total:
                        description: TotalDuration defines the total duration within
                          which events will happen.
                        type: string
                    required:
                    - distribution
                    - total
                    type: object
                type: object
              services:
                description: Services is a list of services that will be stopped.
                items:
                  type: string
                type: array
              suspend:
                description: "Execution Flow \n Suspend forces the Controller to stop
                  scheduling any new jobs until it is resumed. Defaults to false."
                type: boolean
              suspendWhen:
                description: SuspendWhen automatically sets Suspend to True, when
                  certain conditions are met.
                properties:
                  metrics:
                    description: 'Metrics set a Grafana alert that will be triggered
                      once the condition is met. Parsing: Grafana URL: http://grafana/d/A2EjFbsMk/ycsb-services?editPanel=86
                      metrics: A2EjFbsMk/86/Average (Panel/Dashboard/Metric)'
                    nullable: true
                    type: string
                  state:
                    description: State describe the runtime condition that should
                      be met after the action has been executed Shall be defined using
                      .Lifecycle() methods. The methods account only jobs that are
                      managed by the object.
                    nullable: true
                    type: string
                type: object
              tolerate:
                description: Tolerate specifies the conditions under which the call
                  will fail. If undefined, the call fails immediately when a call
                  to service has failed.
                properties:
                  failedJobs:
                    description: FailedJobs indicate the number of services that may
                      fail before the cluster fails itself.
                    minimum: 1
                    type: integer
                type: object
            required:
            - callable
            - services
            type: object
          status:
            description: CallStatus defines the observed state of Call.
            properties:
              conditions:
                description: Conditions describe sequences of events that warrant
                  the present Phase.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              expectedTimeline:
                description: ExpectedTimeline is the result of evaluating a timeline
                  distribution into specific points in time.
                items:
                  format: date-time
                  type: string
                type: array
              lastScheduleTime:
                description: LastScheduleTime provide information about  the last
                  time a Service was successfully scheduled.
                format: date-time
                type: string
              message:
                description: Message provides more details for understanding the Reason.
                type: string
              phase:
                description: Phase is a simple, high-level summary of where the Object
                  is in its lifecycle. The conditions array, the reason and message
                  fields, and the individual container status arrays contain more
                  detail about the pod's status.
                type: string
              queuedJobs:
                description: QueuedJobs is a list of services scheduled for stopping.
                items:
                  description: Callable is a script that is executed within the service
                    container, and returns a value. For example, a callable can be
                    a command for stopping the containers that run in the Pod.
                  properties:
                    command:
                      description: Container specifies a command and arguments to
                        stop the targeted container in an application-specific manner.
                      items:
                        type: string
                      type: array
                    container:
                      description: Container specific the name of the container to
                        which we will run the command
                      type: string
                  required:
                  - command
                  - container
                  type: object
                type: array
              reason:
                description: Reason is A brief CamelCase message indicating details
                  about why the service is in this Phase. e.g. 'Evicted'
                type: string
              scheduledJobs:
                description: ScheduledJobs points to the next QueuedJobs.
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
