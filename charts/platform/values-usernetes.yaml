## @section Global parameters
## Global Frisbee Platform parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
##
## @param global.domainName DNS name for making Telemetry stack accessible outside the cluster.
## @param global.ingressClass Type of ingres for making Telemetry stack accessible outside the cluster.
global:
  domainName: localhost

  ingressClass: public

## @section Frisbee Operator parameters

## @param operator.enabled Set it to false for running the controller outside the Kubernetes Cluster.
## @param operator.name Defines the name of the controller.
## @param operator.advertisedHost Defines the Public IP of the controller, when operator.enabled==false.


## @param operator.webhook.k8s.enabled Enables the Admission webhooks
## @param operator.webhook.k8s.port Sets the port for the Admission/Mutation  webhook server.

## @param operator.webhook.grafana.port Sets the port for the telemetry webhook server.
operator:
  enabled: true

  name: "frisbee-operator"

  advertisedHost: "10.1.96.192"

  webhook:
    k8s:
      enabled: true
      port: 9443

    grafana:
      port: 6666


## @section Provision of dynamic volumes

## @param openebs.enabled Whether to enable OpenEBS
## @param openebs.storagePath Default directory used by the provisioner to provision hostpath volumes.
## @param openebs.nfs-provisioner.enabled Will enable dynamic NFS servers
## @param openebs.ndm.enabled Whether to enable block device management
## @param openebs.ndm.sparse.path Path to Sparse files. Set it with  "$XDG_RUNTIME_DIR/usernetes/openebs/sparse"
## @param openebs.ndm.filters.includePaths Include block devices for dynamic block provisioning
## @param openebs.ndm.filters.excludePaths Exclude block devices for dynamic block provisioning
## @param openebs.varDirectoryPath.baseDir # Directory used by the OpenEBS to store debug information. Set it with  "$XDG_RUNTIME_DIR/usernetes/openebs/var"
openebs:
  enabled: true

  storagePath: /run/user/1001/usernetes/openebs/local

  nfs-provisioner:
    enabled: true

  ndm:
    enabled: false # TODO: make it work for usernetes
    sparse:
      path: /run/user/1001/usernetes/openebs/sparse
    filters:
      includePaths: "" # example /dev/loop7
      excludePaths: "/dev/fd0,/dev/sr0,/dev/ram,/dev/dm-,/dev/md,/dev/rbd,/dev/zd"

  varDirectoryPath:
    baseDir: /run/user/1001/usernetes/openebs/var

## @section Chaos Injection Parameters

## @param chaos.enabled Whether to enable the Chaos controllers
chaos:
  enabled: true

## @param chaos-mesh.controllerManager.replicaCount Number of Chaos-Mesh controller replicas
## @param chaos-mesh.chaosDaemon.runtime Specifies which container runtime to use.
## @param chaos-mesh.chaosDaemon.socketPath Specifies the container runtime socket. Set it with  "$XDG_RUNTIME_DIR/usernetes/containerd/containerd.sock"
chaos-mesh:
  controllerManager:
    replicaCount: 1

  # If you are using Kind or using containerd as CRI, you can use the
  # config below to use containerd as the runtime in chaos-daemon.
  chaosDaemon:
    runtime: containerd
    socketPath: /run/user/1001/usernetes/containerd/containerd.sock


## @section General purpose, web-based UI for Kubernetes clusters

## @param dashboard.enabled Whether to enable Dashboard
dashboard:
  enabled: true
