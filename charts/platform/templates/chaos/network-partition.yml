---
# chaos.network.partition will separate the target service from every other service that exists in the given plan,
# and it is not a core frisbee service (e.g, telemetry)
#
# https://chaos-mesh.org/docs/1.0.3/user_guides/experiment_scope/
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: chaos.network.partition
spec:
  inputs:
    parameters:
      targets: "localhost"
      direction: both
      duration: "2m"
      plan: ""
  chaos:
    type: raw
    raw: |
      apiVersion: chaos-mesh.org/v1alpha1
      kind: NetworkChaos
      metadata:
        name: autogenerated
      spec:
        action: partition
        direction: {{"{{.Inputs.Parameters.direction}}"}}
        duration: {{"{{.Inputs.Parameters.duration}}"}}
        mode: all
        selector:
          expressionSelectors:
            - { key: 'plan.frisbee.io/part-of', operator: In, values: [ {{"{{.Inputs.Parameters.plan}}"}}] }
            - { key: 'plan.frisbee.io/component', operator: In, values: [ "SUT" ] }
        target:
          mode: all
          selector:
            pods:
              {{.Release.Namespace}}: [{{"{{.Inputs.Parameters.targets}}"}}]

---
# chaos.network.partition.namespace will separate the target service from every other service in the namespace,
# including the monitoring stack and other services irrelevant to frisbee. If the namespace is not specified, the
# installation namespace will be used.
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: chaos.network.partition.namespace
spec:
  inputs:
    parameters:
      targets: "localhost"
      direction: both
      duration: "2m"
      namespaces: {{.Release.Namespace}}
  chaos:
    type: raw
    raw: |
      apiVersion: chaos-mesh.org/v1alpha1
      kind: NetworkChaos
      metadata:
        name: autogenerated
      spec:
        action: partition
        direction: {{"{{.Inputs.Parameters.direction}}"}}
        duration: {{"{{.Inputs.Parameters.duration}}"}}
        mode: all
        selector:
          namespaces: [{{"{{.Inputs.Parameters.namespace}}"}}]
        target:
          mode: all
          selector:
            pods:
              {{.Release.Namespace}}:
                - {{"{{.Inputs.Parameters.target}}"}}

---
# chaos.network.partition.pods will separate the target service from the specified pods.
# If the namespace is not specified, the installation namespace will be used.
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: chaos.network.partition.partial
spec:
  inputs:
    parameters:
      source: "" # comma separated services
      direction: both
      duration: "2m"
      dst: "" # comma separated services
  chaos:
    type: raw
    raw: |
      apiVersion: chaos-mesh.org/v1alpha1
      kind: NetworkChaos
      metadata:
        name: autogenerated
      spec:
        action: partition
        direction: {{"{{.Inputs.Parameters.direction}}"}}
        duration: {{"{{.Inputs.Parameters.duration}}"}}
        mode: all
        selector:
          pods:
            {{.Release.Namespace}}:  [ {{"{{.Inputs.Parameters.dst}}"}} ]
        target:
          mode: all
          selector:
            pods:
              {{.Release.Namespace}}: [ {{"{{.Inputs.Parameters.source}}"}} ]