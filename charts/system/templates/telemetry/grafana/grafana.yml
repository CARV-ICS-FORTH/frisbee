---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: system.telemetry.grafana.template
spec:
  service:
    decorators:
      labels:
        scenario.frisbee.dev/component: SYS
      ingressPort:
        name: http
    volumes:
      - name: config
        configMap:
          name: system.telemetry.grafana.config
    containers:
      - name: main
        image: grafana/grafana-oss:9.4.7
        #image: grafana/grafana-oss:9.2.1
        ports:
          - name: http
            containerPort: {{.Values.telemetry.grafana.port}}
        resources:
          requests:
            memory: "14Gi"
            cpu: "2"
        volumeMounts:
          - name: config
            mountPath: /etc/grafana/grafana.ini
            subPath: grafana.ini
            readOnly: true

          - name: config
            mountPath: /etc/grafana/provisioning/dashboards/dashboard.yml
            subPath: dashboard.yml
            readOnly: true

          - name: config
            mountPath: /etc/grafana/provisioning/datasources/prometheus.yml
            subPath: prometheus.yml
            readOnly: true

        startupProbe:
          httpGet:
            path: /api/health
            port: http
          failureThreshold: 30
          periodSeconds: 10

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: system.telemetry.grafana.config
data:
  dashboard.yml: |
    apiVersion: 1

    providers:
      - name: 'Prometheus'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: true
        allowUiUpdates: true
        options:
          path: /etc/grafana/provisioning/dashboards

  prometheus.yml: |
    apiVersion: 1

    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        orgId: 1
        url: "http://{{.Values.telemetry.prometheus.name}}:{{.Values.telemetry.prometheus.port}}"
        basicAuth: false
        isDefault: true
        editable: true


  grafana.ini: | # For more options see https://github.com/grafana/grafana/blob/main/conf/defaults.ini
    #################################### Logging ##########################
    [log]
    # Either "debug", "info", "warn", "error", "critical", default is "info"
    level = debug

    #################################### Users ###############################
    [users]
    # Default UI theme ("dark" or "light" or "system")
    default_theme = light

    [auth]
    # Set to true to disable (hide) the login form, useful if you use OAuth
    disable_login_form = true

    #################################### Paths ###############################
    [paths]
    # Path to where grafana can store temp files, sessions, and the sqlite3 db (if that is used)
    #data = /testdata/data

    # Temporary files in `data` directory older than given duration will be removed
    #temp_data_lifetime = 24h

    # Directory where grafana can store logs
    #logs = /testdata/log

    # Directory where grafana will automatically scan and look for plugins
    #plugins = data/plugins

    # folder that contains provisioning config files that grafana will apply on startup and while running.
    #provisioning = conf/provisioning

    #################################### Basic Auth ##########################
    [auth.basic]
    enabled = false

    #################################### Anonymous Auth ######################
    [auth.anonymous]
    # enable anonymous access
    enabled = true

    # specify organization name that should be used for unauthenticated users
    #org_name = Frisbee Dev.

    # specify role for unauthenticated users (Viewer, Editor, Admin)
    org_role = Admin


    #################################### Database ############################
    #[database]
    wal = true

    #################################### Analytics ###########################
    [analytics]
    # Set to false to disable all checks to https://grafana.com for new versions of grafana.
    check_for_updates = false

    # Set to false to disable all checks to https://grafana.com for new versions of plugins.
    check_for_plugin_updates = false


    #################################### Unified Alerting ####################
    [unified_alerting]
    # Enable the Unified Alerting sub-system and interface. When enabled we'll migrate all of your alert rules and notification channels to the new system. New alert rules will be created and your notification channels will be converted into an Alertmanager configuration. Previous data is preserved to enable backwards compatibility but new data is removed when switching. When this configuration section and flag are not defined, the state is defined at runtime. See the documentation for more details.
    enabled = false

    #################################### Alerting ############################
    [alerting]
    # Enable the legacy alerting sub-system and interface. If Unified Alerting is already enabled and you try to go back to legacy alerting, all data that is part of Unified Alerting will be deleted. When this configuration section and flag are not defined, the state is defined at runtime. See the documentation for more details.
    enabled = true


    #################################### Explore #############################
    [explore]
    # Enable the Explore section
    enabled = false