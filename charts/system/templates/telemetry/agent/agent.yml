---
# The problem of running cadvisor as a sidecar is that the sidecar gets its own cgroup.
# https://d2iq.com/blog/running-kind-inside-a-kubernetes-cluster-for-continuous-integration


# https://grafana.com/docs/agent/latest/configuration/integrations/cadvisor-config/
# https://github.com/google/cadvisor/blob/master/docs/storage/prometheus.md

# https://pracucci.com/kubernetes-dns-resolution-ndots-options-and-why-it-may-affect-application-performances.html
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: system.telemetry.agent
spec:
  service:
    decorators:
      annotations:
        "sidecar.frisbee.dev/telemetry": cadvisor
    containers:
      - name: cadvisor
        image: icsforth/cadvisor
        ports:
          - name: tel-sys
            containerPort: 9442
        securityContext:
          privileged: true
          #capabilities:
          #add: [ SYS_ADMIN, SYS_CHROOT, MKNOD, SETFCAP ]
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eux

            get_main_pid() {
              # Wait a bit to obtain the PID of the main container
              [ -f "/dev/shm/app" ] || inotifywait /dev/shm --include 'app'

              export mainPID=$(cat /dev/shm/app)
            }

            enter_ns() {
              # Check that main's PID corresponds to an actual process.
              # If it doesn't, it may be already complete. In any case, it is not our job
              # to find out the reason. Just exit with success and let experiment to continue.
              [ -d "/proc/${mainPID}" ] || { echo "/proc/${mainPID} does not exists.";  exit 0; }

              # Unmount the local cgroup
              umount /sys/fs/cgroup

              # Tap into the cgroup of the main container, and mount it locally
              nsenter -t ${mainPID} -C -- mount -t cgroup2 none /sys/fs/cgroup
            }

            get_main_pid && enter_ns

            # Start the monitoring
            cadvisor --port=9442                  \
            --docker_only=true                   \
            --store_container_labels=false        \
            --log_cadvisor_usage=false            \
            --profiling=false                     \
            --allow_dynamic_housekeeping=true     \
            --housekeeping_interval=2s            \
            --disable_root_cgroup_stats=false     \
            --disable_metrics=advtcp,cpuLoad,cpu_topology,cpuset,hugetlb,memory_numa,process,referenced_memory,resctrl,sched,percpu,process,perf_event,tcp,udp  \
            --enable_metrics=cpu,memory,disk,diskIO,network,accelerator,oom_event


---
apiVersion: v1
kind: ConfigMap
metadata:
  name: system.telemetry.agent.config
data: {{(.Files.Glob "dashboards/*.json").AsConfig | nindent 2}}
