---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: cockroach-scaleup-conditional
spec:
  actions:
    # Step 0. Create individual cockroach servers
    - action: Cluster
      name: masters
      cluster:
        templateRef: cockroach.cluster.master
        instances: 3
        inputs:
          - { join: "masters-0:26257,masters-1:26257,masters-2:26257" }


    # Step 1. Create a cockroach cluster from the individual servers
    - action: Call
      name: boot
      depends: { running: [ masters ] }
      call:
        callable: boot
        services: [ masters-0 ]

    # Step 3. Add new clients every two minutes to hammer the cluster with requests
    - action: Cluster
      name: loaders
      depends: { success: [ boot ] }
      cluster:
        templateRef: ycsb.cockroach.loader
        instances: 100
        inputs:
          - { server: .cluster.masters.one, workload: workloada, recordcount: "100000000", threads: "40", delay: "15" }
        schedule:
          cron: "@every 2m"


    # Step 4. Add new servers when tail-latency is above 80ms
    - action: Cluster
      name: more-servers
      depends: { success: [ boot ] }
      cluster:
        templateRef: cockroach.cluster.master
        instances: 10
        inputs:
          - { join: "masters-0:26257" }
        schedule:
          event:
            metrics: 'max() of query(A2EjFbsMk/26/99Latency, 5m, now) is above(80000)'


    # Teardown
    - action: Delete
      name: teardown
      depends: { success: [ loaders ] }
      delete:
        jobs: [ masters, more-servers ]