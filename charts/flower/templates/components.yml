---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-dataset
spec:
  storageClassName: ephemeral-shared-volume
  resources:
    requests:
      storage: 12Gi
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany

---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: fl.quickstart.server
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  service:
    decorators:
      telemetry:
        - platform.telemetry.container
    containers: # Container
      - name: app
        image: icsforth/fl-demo:latest
        ports:
          - name: tcp
            containerPort: 8080
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eum
            trap "touch /dev/shm/stop" EXIT

            python3 server.py

---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: fl.quickstart.downloader
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  service:
    volumes:
      - name: dataset
        persistentVolumeClaim:
          claimName: shared-dataset
    containers: # Container(s)
      - name: app
        image: busybox
        volumeMounts:
          - name: dataset
            mountPath: /dataset
        command:
          - /bin/sh   # Run shell
          - -c        # Read from string
          - |         # Multi-line str
            set -eum

            if [ -d "/dataset/cifar-10-batches-py" ]
            then
                echo "Directory /dataset/cifar-10-batches-py exists."
            else
              echo "Store Cifar10 at /dataset/cifar-10-batches-py"

              wget https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz
              tar -xzvf cifar-10-python.tar.gz -C /dataset/
            fi


---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: fl.quickstart.client
  labels:
    app.kubernetes.io/managed-by: {{.Release.Service | quote}}
spec:
  inputs:
    parameters:
      server: "127.0.0.1"
  service:
    decorators:
      telemetry:
        - platform.telemetry.container
    volumes:
      - name: dataset
        persistentVolumeClaim:
          claimName: shared-dataset
    containers: # Container
      - name: app
        image: icsforth/fl-demo:latest
        volumeMounts:
          - name: dataset
            mountPath: /dataset
            readOnly: true
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eum
            trap "touch /dev/shm/stop" EXIT

            export FL_DATASET=/dataset
            export FL_SERVER={{"{{.Inputs.Parameters.server}}"}}

            python3 client.py