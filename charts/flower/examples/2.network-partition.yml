---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dataset
spec:
  storageClassName: network-volume
  volumeMode: Filesystem
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: frisbee.io/v1alpha1
kind: TestPlan
metadata:
  name: fl-network-partition
spec:
  actions:
    # Download the dataset into a shared volume
    - action: Service
      name: downloader
      service:
        templateRef: fl.quickstart.dataset.cifar
        inputs:
          - { dataClaimName: dataset }

    # Create a Flower server
    - action: Service
      name: server
      service:
        templateRef: fl.quickstart.server

    # Create three Flower clients
    - action: Cluster
      depends: { success: [ downloader ], running: [ server ] }
      name: clients
      cluster:
        instances: 3
        templateRef: fl.quickstart.client
        inputs:
          - { server: server, dataClaimName: dataset }


    # Step5. partition node 1 from the rest of the nodes; node 1 can reach other nodes, but no other nodes can reach node 1
    - action: Chaos
      name: partition0
      depends: { running: [ clients ], after: "8m" }
      chaos:
        templateRef: system.chaos.network.partition.partial
        inputs:
          - { targets: server, duration: 2m , direction: "to", dst: "clients-1,clients-2,clients-3" }