apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: ycsb-redis
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  entries:
    # Loader injecting keys into a single server
    "loader":
      inputs:
        parameters:
          server: localhost
          port: "6379"
          mode: "single"
          offset: "0"
          recordcount: "1000000"
          cpu: ""     # Example: 8
          memory: ""  # Example: 8Gi
          threads: "1"
          workload: "workloada"
          dropdata: "false"
      spec: |
        agents:                                       # Agents
          telemetry: [ sysmon/container, ycsbmon/client ]
        resources:                                    # Resources
          cpu: {{"{{.Inputs.Parameters.cpu}}"}}
          memory: {{"{{.Inputs.Parameters.memory}}"}}
        container:                                    # Container
          name: app
          image: aylei/go-ycsb:20201029
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              addr={{"{{.Inputs.Parameters.server}}"}}:{{"{{.Inputs.Parameters.port}}"}}

              echo "Loader: $addr <- {{"{{.Inputs.Parameters.recordcount}}"}}:{{"{{.Inputs.Parameters.offset}}"}}"

              ./go-ycsb load redis                                     \
                  -P workloads/{{"{{.Inputs.Parameters.workload}}"}}         \
                  -p dropdata={{"{{.Inputs.Parameters.dropdata}}"}}          \
                  -p recordcount={{"{{.Inputs.Parameters.recordcount}}"}}    \
                  -p insertstart={{"{{.Inputs.Parameters.offset}}"}}         \
                  -p threadcount={{"{{.Inputs.Parameters.threads}}"}}        \
                  -p redis.mode={{"{{.Inputs.Parameters.mode}}"}}            \
                  -p redis.addr=${addr}                                \
              >> /dev/shm/pipe


    # Run queries against a single server
    "runner":
      inputs:
        parameters:
          server: localhost
          port: "6379"
          mode: "single"
          workload: "workloada"
          operationcount: "30000000"
          cpu: "8"
          memory: "8Gi"
          threads: "1"
      spec: |
        agents:                                       # Agents
          telemetry: [ sysmon/container, ycsbmon/client ]
        resources:                                    # Resources
          cpu: {{"{{.Inputs.Parameters.cpu}}"}}
          memory: {{"{{.Inputs.Parameters.memory}}"}}
        container:                                    # Container
          name: app
          image: aylei/go-ycsb:20201029
          command:
            - /bin/sh   # Run shell
            - -c        # Read from string
            - |         # Multi-line str
              set -eum
              trap "touch /dev/shm/stop" EXIT

              addr={{"{{.Inputs.Parameters.server"}}}}:{{"{{.Inputs.Parameters.port}}"}}

              echo "Runner: $addr <- {{"{{.Inputs.Parameters.workload}}"}}:{{"{{.Inputs.Parameters.operationcount}}"}}"

              ./go-ycsb run redis                                             \
                    -P workloads/{{"{{.Inputs.Parameters.workload}}"}}              \
                    -p operationcount={{"{{.Inputs.Parameters.operationcount}}"}}   \
                    -p threadcount={{"{{.Inputs.Parameters.threads}}"}}             \
                    -p redis.mode={{"{{.Inputs.Parameters.mode}}"}}                 \
                    -p redis.addr=${addr}                                     \
              >> /dev/shm/pipe