---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: iperf2.server
spec:
  inputs:
    parameters:
      memory: ""
      cpu: ""
  service:
    decorators:
      telemetry:
        - system.telemetry.agent
      resources:
        cpu: {{"{{.Inputs.Parameters.cpu}}" | quote}}
        memory: {{"{{.Inputs.Parameters.memory}}" | quote}}
    containers:
      - name: app
        image: "czero/iperf2"
        ports:
          - name: tcp
            containerPort: 5001
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eum
            cut -d ' ' -f 4 /proc/self/stat > /dev/shm/app # Sidecar: use it for entering the cgroup
            trap "touch /dev/shm/stop" EXIT # Sidecar: use it to terminate itself when this container has exit.

            iperf -s -f m -i 5


---
apiVersion: frisbee.io/v1alpha1
kind: Template
metadata:
  name: iperf2.client
spec:
  inputs:
    parameters:
      server: localhost
      memory: ""
      cpu: ""
      seconds: "60"
  service:
    decorators:
      telemetry:
        - system.telemetry.agent
        - iperf2.telemetry.client
      resources:
        memory: {{"{{.Inputs.Parameters.memory}}" | quote}}
        cpu: {{"{{.Inputs.Parameters.cpu}}" | quote}}
    containers:
      - name: app
        image: "czero/iperf2"
        command:
          - /bin/sh # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eum
            cut -d ' ' -f 4 /proc/self/stat > /dev/shm/app # Sidecar: use it for entering the cgroup
            trap "touch /dev/shm/stop" EXIT # Sidecar: use it to terminate itself when this container has exit.

            server={{"{{.Inputs.Parameters.server}}"}}

            iperf -c ${server} -t {{"{{.Inputs.Parameters.seconds}}"}} -f m -i 5 > /dev/shm/pipe
