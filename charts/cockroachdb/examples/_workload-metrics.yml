---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: cockroach-baseline-cluster-metrics
spec:
  actions:
    # Step 0. Create individual cockroach servers
    - action: Cluster
      name: masters
      cluster:
        templateRef: cockroach.cluster.master
        instances: 3
        inputs:
          - { join: "masters-0:26257,masters-1:26257,masters-2:26257" }


    # Step 1. Create a cockroach cluster from the individual servers
    - action: Call
      name: boot
      depends: { running: [ masters ] }
      call:
        callable: boot
        services: [ masters-0 ]


    # Step 2. Preload the server with keys
    - action: Service
      depends: { success: [ boot ] }
      name: loader
      service:
        templateRef: ycsb.cockroach.loader
        inputs:
          - { server: masters-0, workload: workloada, recordcount: "500000", threads: "40" }



    # Step 2. Run YCSB workload A
    - action: Cluster
      depends: { success: [ loader ] }
      name: workloads
      cluster:
        templateRef: ycsb.cockroach.runner
        inputs:
          - { server: masters-0, workload: workloada, operationcount: "500000", threads: "40" }
          - { server: masters-0, workload: workloadb, operationcount: "500000", threads: "40" }
          - { server: masters-0, workload: workloadc, operationcount: "500000", threads: "40" }
          - { server: masters-0, workload: workloadf, operationcount: "500000", threads: "40" }
          - { server: masters-0, workload: workloadd, operationcount: "500000", threads: "40" }
        schedule:
          event:
            metrics: 'avg() of query(summary/78/avg, 30s, now) is below(0.2)'


    # Step 7: Reload the data with parameters of workload E.
    # Otherwise, the remaining data of the cluster might affect the results
    # We use the dropdata field to remove all data before test.
    - action: Service
      depends: { success: [ workloads ] }
      name: reloader
      service:
        templateRef: ycsb.cockroach.loader
        inputs:
          - { server: masters-0, workload: workloade, recordcount: "500000", threads: "40", dropdata: "true" }


    # Step 8: Run workload E
    - action: Service
      depends: { success: [ reloader ] }
      name: workload-e
      service:
        templateRef: ycsb.cockroach.runner
        inputs:
          - { server: masters-0, workload: workloade, operationcount: "500000", threads: "40" }