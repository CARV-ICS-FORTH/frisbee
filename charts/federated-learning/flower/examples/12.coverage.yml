---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: dataset
spec:
  storageClassName: network-volume
  volumeMode: Filesystem
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: frisbee.dev/v1alpha1
kind: Scenario
metadata:
  name: coverage
spec:
  actions:
    # Create a Flower server
    - action: Service
      name: server
      service:
        templateRef: fl.quickstart.server
        inputs:
          - { clients: "5" }

    # Download the dataset into a shared volume
    - action: Service
      name: downloader
      service:
        templateRef: fl.quickstart.dataset.cifar
        inputs:
          - { dataClaimName: dataset }

    # Create two Flower clients without throttling
    - action: Cluster
      depends: { running: [ server ], success: [ downloader ] }
      name: clients
      cluster:
        templateRef: fl.quickstart.client
        instances: 3
        inputs:
          - { server: server, dataClaimName: dataset }

    # Create 1 Flower client with throttling
    - action: Service
      name: throttled-client
      depends: { running: [ server ], success: [ downloader ] }
      service:
        templateRef: fl.quickstart.client
        inputs:
          - { server: server, dataClaimName: dataset }

    # Create 1 Flower client with coverage report
    - action: Service
      name: coverage-client
      depends: { running: [ server ], success: [ downloader ] }
      service:
        templateRef: fl.quickstart.client-with-coverage
        inputs:
          - { server: server, dataClaimName: dataset }


    # Teardown
    - action: Delete
      name: teardown
      depends: { running: [ server ], success: [ clients, throttled-client, coverage-client ] }
      delete:
        jobs: [ server ]