---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: fl.quickstart.client
spec:
  inputs:
    parameters:
      server: "127.0.0.1"
      dataClaimName: ""

      memory: ""
      cpu: ""
  service:
    decorators:
      telemetry:
        - system.telemetry.agent

      resources:
        memory: {{"{{.Inputs.Parameters.memory}}"}}
        cpu: {{"{{.Inputs.Parameters.cpu}}"}}

    volumes:
      - name: dataset
        persistentVolumeClaim:
          claimName: {{"{{.Inputs.Parameters.dataClaimName}}"}}

    containers:
      - name: app
        image: icsforth/fl-demo:latest
        volumeMounts:
          - name: dataset
            mountPath: /dataset
            readOnly: true
        command:
          - /bin/bash # Run shell
          - -c # Read from string
          - |  # Multi-line str
            set -eumo pipefail
            cut -d ' ' -f 4 /proc/self/stat > /dev/shm/app # Sidecar: use it for entering the cgroup

            # Copy the media dataset into the local directory for processing. We use copy in order to avoid sending the
            # I/O through the shared media.
            cp -r /dataset ./data

            # The clients are  supposed to be continuously running.
            # If the training is stopped, the clients will report “Disconnect and shut down” on the logs,
            # but they will keep running. To this end, we terminate the process upon the given message.
            export FL_SERVER={{"{{.Inputs.Parameters.server}}"}}

            export logFile=/tmp/${HOSTNAME}

            # Exit the client if it disconnects
            python3 client.py | awk -W interactive '/Disconnect and shut down/{exit 0};END{print $0}'