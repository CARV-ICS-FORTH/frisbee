---
apiVersion: frisbee.dev/v1alpha1
kind: Template
metadata:
  name: fedbed.server
spec:
  inputs:
    parameters:
      min_fit_clients: 1
      min_available_clients: 1
      rounds: 5

      # should be used with FL_EVAL_DATASET
      dataset_eval: "true"
      dataset: "MNIST"
      backend: "pytorch"
  service:
    decorators:
      telemetry:
        - system.telemetry.resources

    volumes:
      - name: logs
        emptyDir: {}

    containers:
      #
      # Run the FL-server
      #
      - name: main
        image: icsforth/fedbed:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: FL_STRATEGY
            value: FedAvg
          - name: FL_NUM_OF_ROUNDS
            value: {{"{{.inputs.parameters.rounds}}" | quote}}

          - name: FL_FRACTION_FIT
            value: "0.1"
          - name: FL_FRACTION_EVAL
            value: "0.1"
          - name: FL_MIN_EVAL_CLIENTS
            value: {{"{{.inputs.parameters.min_available_clients}}" | quote}}
          - name: FL_MIN_FIT_CLIENTS
            value: {{"{{.inputs.parameters.min_fit_clients}}" | quote }}
          - name: FL_MIN_AVAILABLE_CLIENTS
            value: {{"{{.inputs.parameters.min_available_clients}}" | quote}}

          - name: FL_EVAL_DATASET
            value: {{"{{.inputs.parameters.dataset_eval}}" | quote}}
          - name: FL_DATASET
            value: {{"{{.inputs.parameters.dataset}}" | quote}}
          - name: FL_BACKEND
            value: {{"{{.inputs.parameters.backend}}" | quote }}
        ports:
          - name: http
            containerPort: 8080
        volumeMounts:
          - name: logs
            mountPath: /fl-logs/
        command:
          - /bin/bash
          - -c
          - |
            set -eux
            cut -d ' ' -f 4 /proc/self/stat > /dev/shm/app # Sidecar: use it for entering the cgroup

            python server.py |& tee -a /fl-logs/server.log

      #
      # Push round events to grafana
      #

      - name: annotator
        image: alpine/curl:latest
        volumeMounts:
          - name: logs
            mountPath: /fl-logs/
        command:
          - /bin/sh   # Run shell
          - -c        # Read from string
          - |         # Multi-line str
            set -eux

            export logfile=/fl-logs/server.log
            export GRAFANA=http://${GRAFANA_SERVICE_HOST}:${GRAFANA_SERVICE_PORT}

            # Wait a bit for the log file to become ready
            sleep 10

            echo "Tail tailing the log ${logfile} for events"

            export EVENTCNT=0
            tail -f ${logfile} | grep --line-buffered "fit_round received" | while read line ; do
              echo -e "new event: $line"
              EVENTCNT=$[$EVENTCNT +1]

              annotation=$(echo '{"tags":["app"],"text":"'${EVENTCNT}'"}')

              curl -s -H "Content-Type: application/json" -X POST -d ${annotation} ${GRAFANA}/api/annotations

              echo -e "\n--"
            done




    callables:
      wait-for-round: # block waiting for a specific round
        container: main
        command:
          - /bin/bash
          - -c
          - |
            export ROUND=2

            while true; do
              (( $(grep "fit_round received" /fl-logs/server.log | wc -l) > ${ROUND} )) && break || sleep 5;
            done